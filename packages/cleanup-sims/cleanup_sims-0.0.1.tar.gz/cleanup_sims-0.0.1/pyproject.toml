# mypy
[tool.mypy]
exclude = [
    "cleanup_sims/tests"
]
namespace_packages = true
follow_imports = "silent"
ignore_missing_imports = true
packages = [
    "cleanup_sims"
]
enable-incomplete-features = true
plugins = "numpy.typing.mypy_plugin"

# pdoc(3)
[tool.pdoc]


# pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=cleanup_sims --cov-report=html --html=docs/build/htmlcov/html_report.html --self-contained-html"

# coverage
[tool.coverage.run]
branch = true
command_line = "-m pytest"

[tool.coverage.html]
directory = "docs/build/htmlcov"
title = "coverage_report"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "__all__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
omit = [
    "*Test*",
    "*test*",
    "*/usr/local/lib*",
    "*Users*",
    "*__init__*",
    "*__autograph_generated*"
]

# black
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | development
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

# vulture
[tool.vulture]
exclude = ["tests/", "development/"]
# ignore_decorators = ["@app.route", "@require_*"]
# ignore_names = ["visit_*", "do_*"]
# make_whitelist = true
min_confidence = 80
paths = ["encodermap"]
sort_by_size = true
verbose = false

# isort
[tool.isort]
profile = "black"
src_paths = ["encodermap", "tests"]

# project settings
[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "cleanup_sims"
authors = [
    {name="Kevin Sawade", email="kevin.sawade@uni-konstanz.de"}
]
description = "Cleans up your messy Gromacs simulations"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["gromacs", "molecular-dynamics"]
license = {file = "LICENSE"}
dependencies = [
    "MDAnalysis",
    "numpy",
    "imohash"
]
version = "0.0.1"

[project.scripts]
cleanup_sims = "cleanup_sims.cleanup_sims:main"