"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[1682],{35135:(n,e,s)=>{s.r(e),s.d(e,{default:()=>g});var t,i=s(68494),o=s(40489),a=s(30781),l=s(69352),r=s(75477),d=s(50958);!function(n){n.RunningKernel=class{constructor(n){this.commands=n.commands,this.kernel=n.kernel,this.kernels=n.kernels,this.sessions=n.sessions,this.spec=n.spec||null,this.trans=n.trans,this._icon=n.icon||l.jupyterIcon}open(){var n;for(const e of this.sessions.running()){if(this.kernel.id!==(null===(n=e.kernel)||void 0===n?void 0:n.id))continue;const{path:s,type:t}=e,i="console"===t?"console:open":"docmanager:open";this.commands.execute(i,{path:s})}}shutdown(){return this.kernels.shutdown(this.kernel.id)}icon(){return this._icon}label(){var n;const{kernel:e,spec:s}=this;return`${(null==s?void 0:s.display_name)||e.name} {${null!==(n=e.connections)&&void 0!==n?n:"-"}}`}labelTitle(){var n;const{trans:e}=this,{id:s}=this.kernel,t=[`${this.label()}: ${s}`];for(const s of this.sessions.running())if(this.kernel.id===(null===(n=s.kernel)||void 0===n?void 0:n.id)){const{path:n,type:i}=s;t.push(e.__("%1\nPath: %2",i,n))}return t.join("\n\n")}},n.runningChanged=new d.Signal({})}(t||(t={}));var h,u=s(86701);class c{constructor(n){this._tabsChanged=new d.Signal(this),this._widgets=[],this._labShell=n,this._labShell.layoutModified.connect(this._emitTabsChanged,this)}get tabsChanged(){return this._tabsChanged}addWidget(n){n.title.changed.connect(this._emitTabsChanged,this),this._widgets.push(n)}_emitTabsChanged(){this._widgets.forEach((n=>{n.title.changed.disconnect(this._emitTabsChanged,this)})),this._widgets=[],this._tabsChanged.emit(void 0)}}!function(n){n.showPanel="running:show-panel"}(h||(h={}));const g={activate:function(n,e,s,i){const a=e.load("jupyterlab"),d=new o.RunningSessionManagers,g=new o.RunningSessions(d,e);return g.id="jp-running-sessions",g.title.caption=a.__("Running Terminals and Kernels"),g.title.icon=l.runningIcon,g.node.setAttribute("role","region"),g.node.setAttribute("aria-label",a.__("Running Sessions section")),s&&s.add(g,"running-sessions"),i&&function(n,e,s){const t=new c(s),i=e.load("jupyterlab");n.add({name:i.__("Open Tabs"),running:()=>Array.from(s.widgets("main")).map((n=>(t.addWidget(n),new o(n)))),shutdownAll:()=>{for(const n of s.widgets("main"))n.close()},refreshRunning:()=>{},runningChanged:t.tabsChanged,shutdownLabel:i.__("Close"),shutdownAllLabel:i.__("Close All"),shutdownAllConfirmationText:i.__("Are you sure you want to close all open tabs?")});class o{constructor(n){this._widget=n}open(){s.activateById(this._widget.id)}shutdown(){this._widget.close()}icon(){const n=this._widget.title.icon;return n instanceof l.LabIcon?n:l.fileIcon}label(){return this._widget.title.label}labelTitle(){let n;return n=this._widget instanceof u.DocumentWidget?this._widget.context.path:this._widget.title.label,n}}}(d,e,i),async function(n,e,s){const{commands:i}=s,o=e.load("jupyterlab"),{kernels:a,kernelspecs:l,sessions:d}=s.serviceManager,{runningChanged:h,RunningKernel:u}=t,c=new r.Throttler((()=>h.emit(void 0)),100);a.runningChanged.connect((()=>{c.invoke()})),d.runningChanged.connect((()=>{c.invoke()})),await Promise.all([l.ready,a.ready]),n.add({name:o.__("Kernels"),running:()=>Array.from(a.running()).map((n=>{var e;return new u({commands:i,kernel:n,kernels:a,sessions:d,spec:null===(e=l.specs)||void 0===e?void 0:e.kernelspecs[n.name],trans:o})})),shutdownAll:()=>a.shutdownAll(),refreshRunning:()=>Promise.all([a.refreshRunning(),d.refreshRunning()]),runningChanged:h,shutdownLabel:o.__("Shut Down"),shutdownAllLabel:o.__("Shut Down All"),shutdownAllConfirmationText:o.__("Are you sure you want to permanently shut down all running kernels?")})}(d,e,n),n.shell.add(g,"left",{rank:200,type:"Sessions and Tabs"}),n.commands.addCommand(h.showPanel,{label:a.__("Sessions and Tabs"),execute:()=>{n.shell.activateById(g.id)}}),d},id:"@jupyterlab/running-extension:plugin",provides:o.IRunningSessionManagers,requires:[a.ITranslator],optional:[i.ILayoutRestorer,i.ILabShell],autoStart:!0}}}]);