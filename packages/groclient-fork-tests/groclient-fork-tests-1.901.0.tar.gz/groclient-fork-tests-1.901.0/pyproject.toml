[tool.poetry]
name = "groclient-fork-tests"
# NOTE: We use poetry-dynamic-versioning to set the version from git
version = "1.901.0"
description = "Python client library for accessing Gro Intelligence's agricultural data platform"
authors = ["Gro Intelligence <dev@gro-intelligence.com>"]
readme = "README.md"
homepage = "https://gro-intelligence.com/platform/api"
repository = "https://github.com/eric-gro/api-client-fork"
documentation = "https://developers.gro-intelligence.com/"
license = "MIT"
# TODO: Update once we remove the old api/ directory
packages = [
  { include = "groclient" },
  { include = "api" },
]
exclude = ["api/client/samples"]

[tool.poetry.dependencies]
python = "^3.6.1"
numpy = "*"
requests = "*"
pandas = "*"
tornado = "*"
unicodecsv = "*"

[tool.poetry.group.test.dependencies]
mock = "*"
pytest = "*"
pytest-cov = "*"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
# TODO: Sphinx 3.2.0 added support for local link checking w/ -b linkcheck. Our
# docs currently fail at this though, due to the way we do local linking. See:
# https://www.sphinx-doc.org/en/master/changes.html
sphinx = "<3.2"
# Ref: https://github.com/sphinx-doc/sphinx/issues/9841
docutils = "<0.18"
recommonmark = "*"
sphinx-multiversion = "*"
sphinx-rtd-theme = "*"

[tool.poetry.scripts]
gro_client = "groclient.__main__:main"

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"
pattern = "^v(?P<base>\\d+\\.\\d+(\\.\\d+)?$)"
# When packaging a version-tagged commit, the version is just the tag name
# (e.g. "1.84.0"). When the commit isn't version-tagged, we include a ".devN"
# suffix denoting how far from the last tagged version the commit is. The
# .devN suffixes are ambiguous (with different branches, there can be different
# commits that result in the same .devN suffix). We use this scheme because
# PyPI requires it. We avoid ambiguity by:
# - PyPI: uploading release packages
# - TestPyPI: uploading packages when commits are merged to main
format-jinja = """
  {%- if distance == 0 -%}
    {{ base }}
  {%- else -%}
    {{ base }}.dev{{ distance }}
  {%- endif -%}
"""
