Metadata-Version: 2.1
Name: word-tree
Version: 2.0.0
Summary: A dictionary optimised for progressive lookup
Home-page: https://gitlab.com/OldIronHorse/word_tree
Author: Simon Redding
Author-email: s1m0n.r3dd1ng@gmail.com
License: GPL v3
Keywords: dictionary,word,incremental,lookup
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: bandit ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-cov ; extra == 'dev'
Requires-Dist: pytest-watch ; extra == 'dev'

# Word Tree [![pipeline status](https://gitlab.com/OldIronHorse/word_tree/badges/master/pipeline.svg)](https://gitlab.com/OldIronHorse/word_tree/-/commits/master) [![coverage report](https://gitlab.com/OldIronHorse/word_tree/badges/master/coverage.svg)](https://gitlab.com/OldIronHorse/word_tree/-/commits/master)


Efficient lookup of next possible character(s) given a starting word fragment.

This is intended for use in word game strategies (Boggle, Scrabble, Anagram).

Usage:

```
>>> import word_tree
>>> with open('words.lst') as wl:
...   wt = word_tree.make_word_tree([w.strip() for w in wl])
...
>>> word_tree.next_char(wt, 'do')
['c', 'e', 'd', 'g', 'i', 'm', 'l', 'o', 'n', 'p', 's', 'r', 'u', 't', 'w', 'v', 'z', None]
```
