[tool.poetry]
name = "fenlmagic"
version = "0.1.0a0"
description = ""
license = "Apache-2.0"
authors = ["Kevin J Nguyen <kevin.nguyen@datastax.com>"]
readme = "README.md"
packages = [{include = "fenlmagic", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
kaskada = "^0.1.0a0"


[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
isort = "^5.11.4"
pylint = "^2.15.10"
mypy = "^0.991"
ruff = "^0.0.231"
poethepoet = "^0.18.1"
autoflake = "^2.0.0"
autopep8 = "^2.0.1"
types-decorator = "^5.1.8.1"
types-protobuf = "^4.21.0.3"
types-requests = "^2.28.11.8"
types-setuptools = "^65.7.0.3"
types-six = "^1.16.21.4"
types-typed-ast = "^1.5.8.3"
pytest-cov = "^4.0.0"

[tool.poe.tasks]
    [tool.poe.tasks.clean]
    help = "Remove generated files"
    cmd  = """
        # multiline commands including comments work too!
        rm -rf .coverage
            .mypy_cache
            .pytest_cache
            ./**/__pycache__
            dist
            htmlcov
            ./tests/fixtures/simple_project/venv
            ./tests/fixtures/venv_project/myvenv
            ./tests/fixtures/poetry_plugin_project/**/.venv
            ./tests/temp
    """

    [tool.poe.tasks.format-isort]
    help = "Run import sort (isort) on the code base"
    cmd = "isort src"

    [tool.poe.tasks.format-black]
    help = "Run black on the code base"
    cmd = "black src"

    [tool.poe.tasks.format]
    help = "Run formating tools on the code base"
    sequence  = ["format-isort", "format-black"]

    [tool.poe.tasks.test]
    help = "Run unit and feature tests"
    cmd = "pytest --cov=src"

    [tool.poe.tasks.types]
    help = "Run the type checker"
    cmd  = "mypy src --ignore-missing-imports"

    [tool.poe.tasks.lint]
    help = "Run the linter"
    cmd  = "pylint src --fail-under=5"

    [tool.poe.tasks.style-black]
    help = "Validate black code style"
    cmd  = "black src --check --diff --target-version=py310"

    [tool.poe.tasks.style-isort]
    help = "Validate isort code style"
    cmd  = "isort src --check --diff"

    [tool.poe.tasks.style]
    help = "Validate code style"
    sequence = ["style-isort", "style-black"]

    [tool.poe.tasks.remove-imports-vars]
    help = "Run to remove unused imports and variables"
    cmd = "autoflake -r --in-place --remove-unused-variables src/"

[tool.isort]
profile = "black"

[tool.pylint.format]
max-line-length = "120"
fail-under = "5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
