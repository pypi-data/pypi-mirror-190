=====Architecture=====

1. Module for doc generation

	In charge of creating and manipulating the files. It has the functionality to read a given template in .md format, identify its keys in the standard format <<KEY>>, and then, replace them with the respective dataset fields. Next, generate the document in pdf format and make it available in the default /output/ directory.
	This module operates with only one set of data, that is, for an object, it returns only one document, having as main output the doc_generator() function.
	Inputs:
	--> directory_template: str - template folder .md

	--> key_name_file: str - parameter concerning the denominator key of the document name, which must follow the format {key_name}.
 	For example, for a template that has the keys "name" and "registration", the output could be "registration_name", generating the following results:

	- Aaron_3141592653.pdf
	- Barnardo_2718281828.pdf
	- Caliban_4815162342.pdf

	Valid separators: registration_name, registration-name, registration:name, registration name;

	--> flag: int - optional parameter that defines the final output format.
	1 (def.) - The doc will be converted to .pdf;
	2 - The doc will remain in .md;

	--> key_value: dict - dictionary with all the keys and their respective values, already extracted from the module that handled
	the data.
	Structure:
	{
		"field 1": "value 1",
		"field 2": "value 2",
			... : ...,
		"field n": "value n"
	},

	Keys are arbitrary in nature, which means that their names, quantities, and repetitions are uncertain. All will be searched within the template: those found will be replaced by the corresponding value, and those that are not will be indicated in the terminal via warning.


2. Module for cleaning data

	Responsible for extracting and filtering the dataset from the path specified by the user. Accepts the following formats: csv,
	html, json, xlsx, xml.
	1) Cleaning up incomplete lines;
	2) Remove duplicates;
	3) Convert to the required format in the document generation module;

3. Module for sending emails

	Administration of sending emails by the user through the email address. For this purpose, the name of the default column must be "email", otherwise, the user must inform which column is designated for this purpose.
	This module will be invoked within the doc_generator() method, sending the email, together with the respective document, for the purpose of signing or issuing a declaration, for example.
	It has a default value of FALSE, which means that the user must inform whether or not he wants to send the files to emails.


4. Module doc generator 

	This is the final module, invoked by entering the CLI code in the terminal (main).
==========