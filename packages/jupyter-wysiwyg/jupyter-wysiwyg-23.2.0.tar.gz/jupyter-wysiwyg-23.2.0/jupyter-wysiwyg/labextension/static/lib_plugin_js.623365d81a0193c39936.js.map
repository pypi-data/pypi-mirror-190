{"version":3,"file":"lib_plugin_js.623365d81a0193c39936.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACsH;AAC7B;AACzF,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,uDAAuD,uBAAuB,GAAG,gCAAgC,uBAAuB,GAAG,sBAAsB,sBAAsB,GAAG,4BAA4B,gDAAgD,GAAG,OAAO,kFAAkF,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,YAAY,uCAAuC,uBAAuB,GAAG,gCAAgC,uBAAuB,GAAG,sBAAsB,sBAAsB,GAAG,4BAA4B,gDAAgD,GAAG,mBAAmB;AAChsB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;ACPgC;AACtB;AACF;AACgB;AACnC;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAgB,EAAE,yDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA,cAAc,+EAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAqB;AACzB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uCAAuC,2DAAY,6BAA6B,2DAAqB;AACrG;AACA,gBAAgB,2DAAqB;AACrC,gBAAgB,2DAAqB;AACrC;AACA;AACA,gBAAgB,2DAAqB;AACrC;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,eAAe,0DAAoB;AACnC;AACA,iEAAe,6BAA6B,EAAC;;;;;;;;;;;;;;;;;;AC7C4C;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://@g2nb/jupyter-wysiwyg/./style/index.css","webpack://@g2nb/jupyter-wysiwyg/./lib/plugin.js","webpack://@g2nb/jupyter-wysiwyg/./style/index.css?0140"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".jp-TinyMCE {\\n    padding-right: 0;\\n}\\n\\n.jp-TinyMCE > .tox-tinymce {\\n    margin-bottom: 0;\\n}\\n\\n.jp-RenderButton {\\n    cursor: pointer;\\n}\\n\\n.jp-RenderButton:hover {\\n    background-color: var(--jp-layout-color2);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,yCAAyC;AAC7C\",\"sourcesContent\":[\".jp-TinyMCE {\\n    padding-right: 0;\\n}\\n\\n.jp-TinyMCE > .tox-tinymce {\\n    margin-bottom: 0;\\n}\\n\\n.jp-RenderButton {\\n    cursor: pointer;\\n}\\n\\n.jp-RenderButton:hover {\\n    background-color: var(--jp-layout-color2);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { INotebookTracker, NotebookPanel } from '@jupyterlab/notebook';\nimport { MarkdownCell } from '@jupyterlab/cells';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { EditorContentFactory, EditorWidget } from './factory';\nimport \"../style/index.css\";\n/**\n * The jupyter-wysiwyg plugins\n */\nconst wysiwyg_plugin = {\n    id: \"@g2nb/jupyter-wysiwyg:plugin\",\n    requires: [INotebookTracker, IStateDB],\n    activate: activate_editor,\n    autoStart: true\n};\nconst add_wysiwyg = {\n    id: \"@g2nb/jupyter-wysiwyg:add-wysiwyg\",\n    provides: NotebookPanel.IContentFactory,\n    activate: override_editor,\n    autoStart: true\n};\nfunction activate_editor(app, tracker, state) {\n    console.log('jupyter-wysiwyg plugin activated!');\n    EditorWidget.instance().tracker = tracker;\n    // When the current notebook is changed\n    tracker.currentChanged.connect(() => {\n        if (!tracker.currentWidget)\n            return; // If no current notebook, do nothing\n        // When the cell is changed\n        tracker.activeCellChanged.connect(() => {\n            const active_cell = tracker.activeCell;\n            if (active_cell instanceof MarkdownCell && !active_cell.rendered && EditorWidget.instance().no_side_button()) {\n                active_cell.editor.focus();\n                EditorWidget.instance().render_side_button();\n                EditorWidget.instance().remove_side_button();\n            }\n            else {\n                EditorWidget.instance().remove_side_button();\n            }\n        });\n    });\n}\nfunction override_editor(app) {\n    console.log('jupyter-wysiwyg override activated!');\n    return new EditorContentFactory();\n}\nexport default [wysiwyg_plugin, add_wysiwyg];\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}