# generated by datamodel-codegen:
#   filename:  <stdin>

from __future__ import annotations

from typing import Sequence

from pydantic import BaseModel, Field


class Model(BaseModel):
    y_1: Sequence[float]
    y_11: Sequence[float]
    y_14: Sequence[float] = Field(
        ..., description="NDArray[float64] = [50606.9741711   7306.20262124]"
    )
    g_1: Sequence[float]
    y_12: Sequence[float] = Field(
        ..., description="NDArray[float64] = [5.06069742e+04 9.50000000e-01]"
    )
    y_21: Sequence[float] = Field(..., description="NDArray[float64] = [50606.9741711]")
    y_23: Sequence[float] = Field(
        ..., description="NDArray[float64] = [12562.01206488]"
    )
    y_24: Sequence[float] = Field(..., description="NDArray[float64] = [4.15006276]")
    g_2: Sequence[float]
    y_2: Sequence[float]
    y_32: Sequence[float] = Field(..., description="NDArray[float64] = [0.50279625]")
    y_31: Sequence[float] = Field(..., description="NDArray[float64] = [6354.32430691]")
    g_3: Sequence[float]
    y_3: Sequence[float]
    y_34: Sequence[float] = Field(..., description="NDArray[float64] = [1.10754577]")
    y_4: Sequence[float] = Field(..., max_items=1, min_items=1)
    MDA_residuals_norm: Sequence[float] = Field(..., alias="MDA residuals norm")
