{"version":3,"file":"lib_index_js.e839694786eae2aedc3f.js","mappings":"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","sources":["webpack://jupyterlab_daisy/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n\nimport { CodeMirrorEditor } from '@jupyterlab/codemirror';\n\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { ToolbarButton, ICommandPalette } from '@jupyterlab/apputils';\nimport { paletteIcon } from '@jupyterlab/ui-components';\nimport { Panel } from '@lumino/widgets';\n\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { INotebookModel, NotebookPanel } from '@jupyterlab/notebook';\nimport { IDisposable } from '@lumino/disposable';\n\n\n// TODO: Should probably split sidebar logic/layout from button class\nclass ButtonExtension\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  app: JupyterFrontEnd;\n  tracker: INotebookTracker;\n  sidebar?: Panel = undefined;\n  daisy_address: string = \"\";\n\n  constructor(app: JupyterFrontEnd, tracker: INotebookTracker) {\n    this.app = app;\n    this.tracker = tracker;\n  }\n\n  // Closes the sidebar and replaces the selected text\n  // TODO: If the user modifies the selection, the sidebar should also close\n  closeAndReplace(\n    ev: MouseEvent,\n    editor: CodeMirrorEditor,\n    sidebar?: Panel\n  ): void {\n    sidebar?.close();\n    let chosen = (ev.target as Element).textContent ?? '';\n    editor.replaceSelection(`${chosen}`);\n  }\n\n  setDaisyAddress(daisy_address: string): void {\n      this.daisy_address = daisy_address;\n  }\n\n  createNew(\n    panel: NotebookPanel,\n    context: DocumentRegistry.IContext<INotebookModel>\n  ): IDisposable {\n    const mybutton = new ToolbarButton({\n      icon: paletteIcon,\n      onClick: () => {\n        this.sidebar?.close();\n\n        const activeCell = this.tracker.activeCell;\n        if (activeCell !== null) {\n          const editor = activeCell.editor as CodeMirrorEditor;\n          let value = editor.getRange(\n            editor.getCursor('start'),\n            editor.getCursor('end')\n          );\n\n\n          if (value.length > 0) {\n            this.sidebar = new Panel();\n            this.sidebar.addClass('my-panel');\n            this.sidebar.id = 'daisy-jupyterlab';\n            this.sidebar.title.icon = paletteIcon;\n            this.app.shell.add(this.sidebar, 'right', { rank: 50000 });\n            this.app.shell.activateById(this.sidebar.id);\n\n            const bla = document.createElement('h1');\n            bla.textContent = 'Related Datasets';\n            this.sidebar?.node.appendChild(bla);\n\n            const capt = document.createElement('h2');\n            capt.textContent = `'${value}'`;\n            capt.className = 'my-highlighted-item';\n            this.sidebar?.node.appendChild(capt);\n\n            const list = document.createElement('ul');\n            list.className = 'my-list';\n            this.sidebar?.node.appendChild(list);\n\n            fetch(`http://${this.daisy_address}/get-joinable?asset_id=${value}`).then(\n              response => {\n                if (response.status === 200) {\n                  response.json().then(json => {\n                    json['JoinableTables'].forEach(\n                      (entry: {\n                        table_path: string;\n                        matches: Record<string, Record<string, string>>[];\n                      }) => {\n                        const bla = document.createElement('li');\n                        bla.setAttribute(\n                          'title',\n                          `Matched ${entry.matches.length} columns, click '+' for details...`\n                        );\n                        const button = document.createElement('button');\n                        button.className = 'my-button';\n                        button.textContent = '+';\n                        const text = document.createElement('p');\n                        text.textContent = entry.table_path.split('/')[0];\n                        text.className = 'my-list-item-text';\n                        const tableContainer = document.createElement('div');\n                        const table = document.createElement('table');\n                        table.setAttribute('style', 'width: 100%;');\n                        tableContainer.className =\n                          'my-column-table-div-collapsed';\n                        tableContainer.setAttribute('style', 'height: 0px');\n\n                        tableContainer.appendChild(table);\n                        bla.appendChild(button);\n                        bla.appendChild(text);\n                        bla.appendChild(tableContainer);\n                        bla.className = 'my-list-item';\n                        const tableHeader = document.createElement('tr');\n                        tableHeader.innerHTML = `\n                      <th>Column Name</th>\n                      <th>COMA Score</th>\n                      `;\n                        table.appendChild(tableHeader);\n                        entry.matches.forEach(match => {\n                          const tr = document.createElement('tr');\n                          tr.innerHTML = `\n                          <td>${match['PK']['from_id']}</td>\n                          <td class='alnright'>${match['RELATED']['coma']}</td>\n                        `;\n                          table.appendChild(tr);\n                        });\n\n                        button.onclick = () => {\n                          if (\n                            tableContainer.className === 'my-column-table-div'\n                          ) {\n                            tableContainer.className =\n                              'my-column-table-div-collapsed';\n                            button.className = 'my-button';\n                            button.textContent = '+';\n                            tableContainer.setAttribute('style', 'height: 0px');\n                          } else {\n                            tableContainer.className = 'my-column-table-div';\n                            button.className = 'my-button-toggled';\n                            button.textContent = '-';\n                            tableContainer.setAttribute(\n                              'style',\n                              `height: ${table.clientHeight}px`\n                            );\n                          }\n                        };\n                        text.onclick = ev =>\n                          this.closeAndReplace(ev, editor, this.sidebar);\n                        list.appendChild(bla);\n                      }\n                    );\n                  });\n                } else {\n                  const bla = document.createElement('li');\n                  bla.textContent = 'No related tables found!';\n                  list.appendChild(bla);\n                }\n              }\n            );\n          }\n        }\n      }\n    });\n\n    // Add the toolbar button to the notebook toolbar\n    panel.toolbar.insertItem(10, 'mybutton', mybutton);\n\n    return mybutton;\n  }\n}\n\n/**\n * Initialization data for the jupyterlab_daisy extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_daisy:plugin',\n  autoStart: true,\n  optional: [ISettingRegistry, ICommandPalette, INotebookTracker],\n  activate: (\n    app: JupyterFrontEnd, \n    settingRegistry: ISettingRegistry | null,\n    palette: ICommandPalette,\n    tracker: INotebookTracker) => {\n    console.log('JupyterLab extension jupyterlab_daisy is activated!');\n    const button = new ButtonExtension(app, tracker);\n\n    if (settingRegistry) {\n      settingRegistry\n        .load(plugin.id)\n        .then(settings => {\n          console.log('jupyterlab_daisy settings loaded:', settings.composite);\n          const daisy_address = settings.get('daisy_address').composite as string;\n          button.setDaisyAddress(daisy_address);\n        })\n        .catch(reason => {\n          console.error('Failed to load settings for jupyterlab_daisy.', reason);\n        });\n    }\n\n    app.docRegistry.addWidgetExtension('Notebook', button);\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}