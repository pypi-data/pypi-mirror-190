
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : emptytop_stmt : mls\n    | entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty : import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | constructor\n    | function_call\n    | for\n    | ifstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF expression \':\' blockif : IF expression \':\' stmt_list ELSE \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list mlsimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relation_def mlsrelation : relation_defrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref\n    | constructor\n    | list_def\n    | map_def\n    | map_lookup\n    | index_lookup\n    | conditional_expression expression : \'(\' expression \')\' boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expression boolean_expression : NOT expression  boolean_expression : var_ref \'.\' ID IS DEFINED boolean_expression : ID IS DEFINED  operand : expression map_lookup : attr_ref \'[\' operand \']\'\n    | local_var \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' function_param_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n    | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : empty map_def : \'{\' pair_list \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSE constant : STRING  constant : RSTRING  constant : mls  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list :var_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,36,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[-12,0,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-1,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'MLS_END':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,89,103,107,108,116,117,118,121,122,123,124,125,127,129,132,140,143,146,158,160,161,162,166,167,170,171,176,177,179,180,186,187,188,189,191,193,194,198,199,200,201,204,206,207,217,220,221,222,223,226,235,236,238,243,245,247,248,249,250,253,254,255,257,258,264,267,268,269,272,273,274,275,277,279,282,283,286,290,301,302,303,304,307,308,319,323,324,325,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,13,-158,-165,13,-15,-16,-17,-18,-19,13,13,-169,-77,-88,-13,13,13,13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,13,13,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,13,13,13,13,-159,-164,-110,-22,-23,13,13,13,13,13,13,-107,13,13,-27,-33,-28,13,-64,-65,13,-114,13,13,-14,-115,13,-25,-103,-104,-105,-106,-155,-102,-109,-116,13,-121,13,-90,-34,-32,13,13,-67,-68,13,-83,-71,13,-91,-74,13,-113,-111,-123,-122,-112,13,-31,13,13,-29,-30,13,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,13,-69,-70,13,-85,-72,-26,-76,13,-79,-81,]),'MLS':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,37,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,89,103,107,108,116,117,118,121,122,123,124,125,127,129,132,140,143,146,158,160,161,162,166,167,170,171,176,177,179,180,186,187,188,189,191,193,194,198,199,200,201,204,206,207,217,220,221,222,223,226,235,236,238,243,245,247,248,249,250,253,254,255,257,258,264,267,268,269,272,273,274,275,277,279,282,283,286,290,301,302,303,304,307,308,319,323,324,325,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,14,-158,-165,14,-15,-16,-17,-18,-19,14,14,-169,-77,-88,-13,14,14,14,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,14,14,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,14,14,14,14,-159,-164,-110,-22,-23,14,14,14,14,14,14,-107,14,14,-27,-33,-28,14,-64,-65,14,-114,14,14,-14,-115,14,-25,-103,-104,-105,-106,-155,-102,-109,-116,14,-121,14,-90,-34,-32,14,14,-67,-68,14,-83,-71,14,-91,-74,14,-113,-111,-123,-122,-112,14,-31,14,14,-29,-30,14,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,14,-69,-70,14,-85,-72,-26,-76,14,-79,-81,]),'ENTITY':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'IMPLEMENT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'IMPLEMENTATION':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'INDEX':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'IMPORT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'CID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,22,23,24,25,26,27,28,29,33,34,37,47,48,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,88,90,102,103,107,108,116,117,118,120,121,122,123,124,125,127,129,131,132,135,140,142,143,146,148,149,150,151,152,153,158,160,161,162,166,167,170,171,176,177,179,180,182,186,187,188,189,191,193,194,198,199,200,201,204,206,207,211,212,214,215,218,219,221,222,223,225,226,229,230,235,236,237,238,243,245,247,248,249,250,251,253,254,255,263,264,267,268,269,272,273,274,275,276,277,279,281,282,283,286,301,302,303,304,307,308,319,324,325,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,38,-158,-165,16,-78,-15,-16,-17,-18,-19,-87,16,16,86,-169,-77,-88,-13,107,16,16,16,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,16,16,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,16,16,16,16,16,-159,-164,-110,-22,-23,16,16,16,16,16,16,16,-107,107,16,-152,16,16,-27,-33,209,-12,-41,-42,-43,-37,-28,-12,-64,-65,16,-114,16,16,-14,-115,16,-25,16,-103,-104,-105,-106,-155,-102,-109,-116,16,-121,16,-90,-34,-32,259,260,-39,-40,16,16,-67,-68,16,16,-83,16,16,-71,16,16,-91,-74,16,-113,-111,-123,-122,-151,-112,16,-31,-38,-29,-30,-12,-66,-84,-86,-80,-82,16,-73,-24,16,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,45,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,120,129,143,146,158,160,161,162,167,176,177,180,182,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,236,237,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,276,277,279,281,282,283,286,301,302,303,304,307,308,319,324,325,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,102,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,21,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,21,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,21,21,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,21,-73,-24,21,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,120,129,143,146,158,160,161,162,167,176,177,180,182,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,236,237,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,276,277,279,281,282,283,286,301,302,303,304,307,308,319,324,325,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,33,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,33,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,33,33,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,33,-73,-24,33,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'TYPEDEF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,37,47,48,50,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,107,108,116,117,118,129,143,146,158,160,161,162,167,176,177,180,186,187,188,189,191,193,194,198,200,204,206,207,221,222,226,235,238,243,247,248,249,250,253,255,264,267,268,269,272,273,274,275,277,279,282,283,286,301,302,303,304,307,308,319,324,325,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,-158,-165,-78,-15,-16,-17,-18,-19,-87,-169,-77,-88,-13,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-159,-164,-110,-22,-23,-107,-27,-33,-28,-12,-64,-65,-114,-14,-115,-25,-103,-104,-105,-106,-155,-102,-109,-116,-121,-90,-34,-32,-67,-68,-83,-71,-91,-74,-113,-111,-123,-122,-112,-31,-29,-30,-12,-66,-84,-86,-80,-82,-73,-24,-124,-108,-89,-69,-70,-75,-85,-72,-26,-76,-79,-81,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,43,44,47,48,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,87,88,89,90,91,102,103,104,105,106,107,108,116,117,118,120,121,122,123,124,125,126,127,129,131,132,133,135,140,141,142,143,144,145,146,147,148,149,150,151,152,153,158,160,161,162,166,167,169,170,171,176,177,179,180,182,186,187,188,189,191,193,194,198,199,200,201,204,205,206,207,208,209,210,212,213,214,215,217,218,219,220,221,222,223,224,225,226,229,230,235,236,237,238,239,243,245,247,248,249,250,251,253,254,255,256,259,260,261,263,264,267,268,269,270,272,273,274,275,276,277,279,281,282,283,286,287,288,289,291,292,293,294,296,299,300,301,302,303,304,305,306,307,308,313,314,315,316,317,318,319,322,324,325,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-168,39,-158,-165,17,42,45,46,-78,-15,-16,-17,-18,-19,-87,17,17,69,85,-169,94,99,-77,-88,-13,108,115,69,69,119,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,69,69,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,69,17,17,17,17,17,17,69,175,176,108,-159,-164,-110,-22,-23,17,69,69,69,69,69,191,69,-107,108,115,99,-152,69,17,17,-27,17,17,-33,-36,210,213,-41,-42,-43,-37,-28,-12,-64,-65,69,-114,99,69,69,-14,-115,115,-25,17,-103,-104,-105,-106,-155,-102,-109,-116,69,-121,69,-90,17,-34,-32,-35,-12,-48,261,-58,-39,-40,17,17,17,17,-67,-68,69,17,17,-83,17,17,-71,17,17,-91,175,-74,69,-113,-111,-123,-122,-151,-112,69,-31,-44,-12,-12,-61,-38,-29,-30,-12,-66,303,-84,-86,-80,-82,17,-73,-24,17,-124,-108,-89,-45,-46,-47,-49,-50,-51,-52,-55,-59,-60,-69,-70,-75,-85,320,321,-72,-26,-53,-54,-56,-57,-62,-63,-76,-134,-79,-81,]),':':([13,16,17,35,37,38,39,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,93,107,108,116,119,129,137,154,155,156,157,159,164,167,172,173,177,186,187,188,189,190,191,193,194,198,200,242,247,248,249,250,253,265,266,282,283,],[-168,-158,-165,-154,-169,87,89,120,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,165,-159,-164,-110,-155,-107,201,217,-162,-163,-157,220,227,-114,236,237,-115,-103,-104,-105,-106,245,-155,-102,-109,-116,-121,281,-113,-111,-123,-122,-112,-160,-161,-124,-108,]),'CMP_OP':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,247,248,249,250,253,268,282,283,286,],[-168,-169,121,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-164,-165,121,121,-107,-114,-115,-103,-104,121,121,121,-155,-102,-109,-116,-121,-113,-111,-123,-122,-112,121,121,-108,121,]),'IN':([13,37,46,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,247,248,249,250,253,268,282,283,286,],[-168,-169,103,122,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-164,-165,122,122,122,-114,-115,122,-104,122,122,122,-155,-102,-109,-116,-121,-113,-111,-123,-122,-112,122,122,-108,122,]),'AND':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,247,248,249,250,253,268,282,283,286,],[-168,-169,123,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-164,-165,123,123,-107,-114,-115,-103,-104,-105,123,123,-155,-102,-109,-116,-121,-113,-111,-123,-122,-112,123,123,-108,123,]),'OR':([13,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,167,177,186,187,188,189,190,191,193,194,198,200,247,248,249,250,253,268,282,283,286,],[-168,-169,124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-164,-165,124,124,-107,-114,-115,-103,-104,-105,-106,124,-155,-102,-109,-116,-121,-113,-111,-123,-122,-112,124,124,-108,124,]),'?':([13,17,37,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,115,116,128,129,149,151,152,153,167,177,186,187,188,189,190,191,193,194,198,200,247,248,249,250,253,263,268,282,283,286,],[-168,-165,-169,125,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-164,-165,125,125,-107,212,214,215,-37,-114,-115,-103,-104,-105,-106,125,-155,-102,-109,-116,-121,-113,-111,-123,-122,-112,-38,125,125,-108,125,]),',':([13,16,17,35,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,97,100,107,108,111,113,114,115,116,119,129,135,155,156,157,160,161,162,167,175,177,186,187,188,189,191,193,194,198,200,233,234,247,248,249,250,252,253,269,282,283,312,],[-168,-158,-165,-154,-169,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,169,-140,-159,-164,179,-145,-146,-165,-110,-155,-107,199,218,219,-157,224,-64,-65,-114,239,-115,-103,-104,-105,-106,-155,-102,-109,-116,-121,-139,-138,-113,-111,-123,-122,284,-112,224,-124,-108,323,]),')':([13,37,44,52,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,95,96,97,98,100,108,109,110,111,112,113,114,115,116,128,129,167,168,169,174,175,177,178,179,186,187,188,189,191,193,194,198,200,231,232,233,234,240,241,247,248,249,250,253,280,282,283,],[-168,-169,-12,-12,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,167,-141,-12,-142,-140,-164,177,-147,-12,-148,-145,-146,-165,-110,193,-107,-114,-12,-12,238,-167,-115,-12,-12,-103,-104,-105,-106,-155,-102,-109,-116,-121,-143,-144,-139,-138,-149,-150,-113,-111,-123,-122,-112,-166,-124,-108,]),'ELSE':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,108,116,117,118,120,129,167,177,180,181,182,183,186,187,188,189,191,193,194,198,200,243,244,247,248,249,250,253,279,282,283,308,],[-168,-15,-16,-17,-18,-19,-169,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-164,-110,-22,-23,-12,-107,-114,-115,-25,242,-12,-21,-103,-104,-105,-106,-155,-102,-109,-116,-121,-74,-20,-113,-111,-123,-122,-112,-24,-124,-108,-26,]),'END':([13,23,24,25,26,27,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,87,89,108,116,117,118,120,129,144,145,147,167,177,180,181,182,183,186,187,188,189,191,193,194,198,200,205,208,209,210,213,217,220,236,237,243,244,247,248,249,250,253,256,259,260,261,276,278,279,281,282,283,287,288,289,291,292,293,294,296,299,300,308,313,314,315,316,317,318,322,],[-168,-15,-16,-17,-18,-19,-169,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,146,146,-164,-110,-22,-23,-12,-107,206,207,-36,-114,-115,-25,243,-12,-21,-103,-104,-105,-106,-155,-102,-109,-116,-121,255,-35,-12,-48,-58,146,146,-12,-12,-74,-20,-113,-111,-123,-122,-112,-44,-12,-12,-61,-12,243,-24,-12,-124,-108,-45,-46,-47,-49,-50,-51,-52,-55,-59,-60,-26,-53,-54,-56,-57,-62,-63,-134,]),']':([13,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,82,96,97,98,100,108,115,116,129,132,133,134,135,164,167,168,169,177,186,187,188,189,191,192,193,194,195,196,197,198,199,200,202,216,227,228,231,232,233,234,247,248,249,250,251,253,271,282,283,290,311,312,323,326,],[-168,-169,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-153,-141,-12,-142,-140,-164,-165,-110,-107,-12,-12,198,-152,226,-114,-12,-12,-115,-103,-104,-105,-106,-155,247,-102,-109,248,249,250,-116,-153,-121,253,263,272,273,-143,-144,-139,-138,-113,-111,-123,-122,-151,-112,304,-124,-108,-136,322,-135,-136,-137,]),'}':([13,37,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,83,108,116,129,136,138,139,167,177,186,187,188,189,191,193,194,198,200,247,248,249,250,252,253,282,283,284,285,309,310,],[-168,-169,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-165,-125,-126,-127,-128,-129,-130,-131,-132,-133,-157,-154,-12,-164,-110,-107,200,-120,-119,-114,-115,-103,-104,-105,-106,-155,-102,-109,-116,-121,-113,-111,-123,-122,-12,-112,-124,-108,-12,-12,-117,-118,]),'DICT':([13,37,70,71,72,73,74,75,76,77,78,87,89,144,145,147,200,205,208,209,210,213,217,220,256,259,260,261,287,288,289,291,292,293,294,296,299,300,313,314,315,316,317,318,322,],[-168,-169,-125,-126,-127,-128,-129,-130,-131,-132,-133,149,149,149,149,-36,-121,149,-35,-12,-48,-58,149,149,-44,-12,-12,-61,-45,-46,-47,-49,-50,-51,-52,-55,-59,-60,-53,-54,-56,-57,-62,-63,-134,]),'.':([16,17,19,31,32,35,60,69,79,80,107,108,115,119,156,157,185,191,274,275,],[-158,-165,43,-157,55,-154,126,-165,-157,-154,-159,-164,-165,-155,55,-157,-157,-155,305,306,]),'(':([16,17,19,31,33,49,52,53,54,67,68,69,79,81,82,103,107,108,115,121,122,123,124,125,127,132,140,166,170,171,179,184,185,199,201,223,226,245,254,272,273,304,],[-158,-165,44,52,67,104,67,67,67,67,67,-165,52,44,67,67,-159,-164,-165,67,67,67,67,67,67,67,67,67,67,67,67,44,52,67,67,67,-83,67,67,-84,-86,-85,]),'USING':([16,40,107,],[-158,91,-159,]),'[':([16,17,33,42,52,53,54,64,67,68,69,79,80,81,82,84,94,103,107,108,115,121,122,123,124,125,127,132,140,152,153,163,166,170,171,179,191,199,201,223,226,245,247,248,253,254,257,258,272,273,304,320,321,],[-158,-165,82,93,82,82,82,127,82,82,-165,-156,132,133,82,140,93,82,-159,-164,-165,82,82,82,82,82,82,82,82,216,-37,93,82,82,82,82,-155,82,82,82,-83,82,-113,-111,-112,82,290,290,-84,-86,-85,93,93,]),'SEP':([17,31,41,50,69,79,108,115,153,157,161,185,203,],[-165,51,51,106,-165,131,-164,-165,106,51,106,51,106,]),'=':([17,31,32,35,99,108,115,119,185,209,210,213,259,260,261,],[-165,-157,53,-154,170,-164,170,-155,-157,257,258,262,295,297,298,]),'PEQ':([17,31,32,35,108,119,185,],[-165,-157,54,-154,-164,-155,-157,]),'AS':([17,50,85,86,108,],[-165,105,141,142,-164,]),'WHEN':([17,108,160,161,162,269,],[-165,-164,223,-64,-65,-66,]),'MATCHING':([17,108,203,],[-165,-164,254,]),'NOT':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,272,273,304,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-83,68,68,-84,-86,-85,]),'INT':([33,52,53,54,67,68,82,93,103,121,122,123,124,125,127,132,140,165,166,170,171,179,199,201,223,226,227,245,254,257,258,272,273,290,304,323,],[70,70,70,70,70,70,70,164,70,70,70,70,70,70,70,70,70,228,70,70,70,70,70,70,70,-83,271,70,70,70,70,-84,-86,70,-85,70,]),'FLOAT':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,272,273,290,304,323,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-83,71,71,71,71,-84,-86,71,-85,71,]),'NULL':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,262,272,273,290,295,297,298,304,323,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-83,72,72,72,72,300,-84,-86,72,314,316,318,-85,72,]),'REGEX':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,272,273,290,304,323,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-83,73,73,73,73,-84,-86,73,-85,73,]),'TRUE':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,272,273,290,304,323,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-83,74,74,74,74,-84,-86,74,-85,74,]),'FALSE':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,272,273,290,304,323,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-83,75,75,75,75,-84,-86,75,-85,75,]),'STRING':([33,52,53,54,67,68,82,83,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,272,273,284,290,304,323,],[76,76,76,76,76,76,76,137,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-83,76,76,76,76,-84,-86,137,76,-85,76,]),'RSTRING':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,257,258,272,273,290,304,323,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-83,77,77,77,77,-84,-86,77,-85,77,]),'{':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,226,245,254,262,272,273,295,297,298,304,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-83,83,83,83,-84,-86,83,83,83,-85,]),'EXTENDS':([38,39,],[88,90,]),'*':([44,52,101,132,133,169,179,],[101,101,171,101,101,101,101,]),'IS':([69,115,191,],[130,130,246,]),'PARENTS':([91,224,],[162,162,]),'REL':([92,166,226,272,273,304,],[163,229,-83,-84,-86,-85,]),'DEFINED':([130,246,],[194,283,]),'UNDEF':([257,258,],[289,293,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,36,]),'top_stmt':([0,2,],[2,2,]),'empty':([0,2,44,52,83,97,111,120,132,133,149,160,168,169,178,179,182,209,236,237,252,259,260,268,276,281,284,285,],[3,3,98,112,138,168,178,183,98,98,211,221,98,98,112,112,183,256,183,183,285,294,296,301,183,183,138,138,]),'mls':([0,2,14,22,28,33,52,53,54,67,68,82,87,89,103,121,122,123,124,125,127,132,140,160,166,170,171,179,199,201,217,220,223,236,245,254,257,258,268,290,303,323,],[4,4,37,47,48,78,78,78,78,78,78,78,144,144,78,78,78,78,78,78,78,78,78,222,78,78,78,78,78,78,144,144,78,276,78,78,78,78,302,78,319,78,]),'entity_def':([0,2,],[5,5,]),'implement_def':([0,2,],[6,6,]),'implementation_def':([0,2,],[7,7,]),'relation':([0,2,],[8,8,]),'statement':([0,2,120,182,236,237,276,281,],[9,9,182,182,182,182,182,182,]),'typedef':([0,2,],[10,10,]),'index':([0,2,],[11,11,]),'import':([0,2,],[12,12,]),'class_ref':([0,2,18,29,33,52,53,54,67,68,82,88,90,102,103,120,121,122,123,124,125,127,132,140,142,166,170,171,179,182,199,201,218,219,223,225,229,230,236,237,245,254,276,281,],[19,19,40,49,81,81,81,81,81,81,81,155,155,172,81,184,81,81,81,81,81,81,81,81,184,81,81,81,81,184,81,81,155,155,81,270,274,275,184,184,81,81,184,184,]),'relation_def':([0,2,],[22,22,]),'assign':([0,2,120,182,236,237,276,281,],[23,23,23,23,23,23,23,23,]),'constructor':([0,2,33,52,53,54,67,68,82,103,120,121,122,123,124,125,127,132,140,142,166,170,171,179,182,199,201,223,236,237,245,254,276,281,],[24,24,61,61,61,61,61,61,61,61,24,61,61,61,61,61,61,61,61,204,61,61,61,61,24,61,61,61,24,24,61,61,24,24,]),'function_call':([0,2,33,52,53,54,67,68,82,103,120,121,122,123,124,125,127,132,140,166,170,171,179,182,199,201,223,236,237,245,254,276,281,],[25,25,59,59,59,59,59,59,59,59,25,59,59,59,59,59,59,59,59,59,59,59,59,25,59,59,59,25,25,59,59,25,25,]),'for':([0,2,120,182,236,237,276,281,],[26,26,26,26,26,26,26,26,]),'if':([0,2,120,182,236,237,276,281,],[27,27,27,27,27,27,27,27,]),'typedef_inner':([0,2,],[28,28,]),'ns_ref':([0,2,18,29,30,33,52,53,54,67,68,82,87,88,89,90,91,102,103,120,121,122,123,124,125,127,132,140,141,142,144,145,166,170,171,179,182,199,201,205,217,218,219,220,223,224,225,229,230,236,237,245,254,276,281,],[31,31,41,41,50,79,79,79,79,79,79,79,153,157,153,157,161,41,79,185,79,79,79,79,79,79,79,79,203,41,153,153,79,79,79,79,185,79,79,153,153,157,157,153,79,161,41,41,41,185,185,79,79,185,185,]),'var_ref':([0,2,33,52,53,54,67,68,82,88,90,103,120,121,122,123,124,125,127,132,140,166,170,171,179,182,199,201,218,219,223,236,237,245,254,276,281,],[32,32,60,60,60,60,60,60,60,156,156,60,32,60,60,60,60,60,60,60,60,60,60,60,60,32,60,60,156,156,60,32,32,60,60,32,32,]),'attr_ref':([0,2,33,52,53,54,67,68,82,88,90,103,120,121,122,123,124,125,127,132,140,166,170,171,179,182,199,201,218,219,223,236,237,245,254,276,281,],[35,35,80,80,80,80,80,80,80,35,35,80,35,80,80,80,80,80,80,80,80,80,80,80,80,35,80,80,35,35,80,35,35,80,80,35,35,]),'expression':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[56,116,116,116,128,129,116,116,186,187,188,189,190,116,116,116,116,116,116,116,116,116,268,282,286,]),'boolean_expression':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'constant':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,257,258,290,323,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,287,291,312,312,]),'list_def':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'map_def':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,262,295,297,298,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,299,313,315,317,]),'map_lookup':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'index_lookup':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'conditional_expression':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'local_var':([33,52,53,54,67,68,82,103,121,122,123,124,125,127,132,140,166,170,171,179,199,201,223,245,254,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'multi':([42,94,163,320,321,],[92,166,225,324,325,]),'param_list':([44,132,133,169,],[95,196,197,232,]),'param_list_empty':([44,132,133,168,169,],[96,96,96,231,96,]),'param_list_element':([44,52,132,133,169,179,],[97,113,97,97,97,113,]),'wrapped_kwargs':([44,52,132,133,169,179,],[100,100,100,100,100,100,]),'function_param_list':([52,179,],[109,241,]),'function_param_list_empty':([52,178,179,],[110,240,110,]),'function_param_list_element':([52,179,],[111,111,]),'operand':([52,53,54,82,103,127,132,140,166,170,171,179,199,201,],[114,117,118,135,173,192,195,202,135,233,234,114,135,252,]),'operand_list':([82,166,199,],[134,230,251,]),'pair_list':([83,284,],[136,309,]),'pair_list_empty':([83,284,285,],[139,139,310,]),'entity_body_outer':([87,89,217,220,],[143,158,264,267,]),'entity_body':([87,89,144,217,220,],[145,145,205,145,145,]),'attr':([87,89,144,145,205,217,220,],[147,147,147,208,208,147,147,]),'attr_type':([87,89,144,145,205,217,220,],[148,148,148,148,148,148,148,]),'attr_type_opt':([87,89,144,145,205,217,220,],[150,150,150,150,150,150,150,]),'attr_type_multi':([87,89,144,145,205,217,220,],[151,151,151,151,151,151,151,]),'attr_base_type':([87,89,144,145,205,217,220,],[152,152,152,152,152,152,152,]),'class_ref_list':([88,90,218,219,],[154,159,265,266,]),'implement_ns_list':([91,224,],[160,269,]),'id_list':([104,239,],[174,280,]),'block':([120,236,237,276,281,],[180,277,279,307,308,]),'stmt_list':([120,182,236,237,276,281,],[181,244,278,278,278,278,]),'implementation':([172,],[235,]),'constant_list':([257,258,],[288,292,]),'constants':([290,323,],[311,326,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',113),
  ('main -> empty','main',1,'p_main_term','plyInmantaParser.py',120),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',125),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',126),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',127),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',128),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',129),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',130),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',131),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',132),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',133),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',138),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',148),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',154),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',165),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',166),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',167),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',168),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',169),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',183),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',190),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',195),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',201),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',207),
  ('if -> IF expression : block','if',4,'p_if','plyInmantaParser.py',213),
  ('if -> IF expression : stmt_list ELSE : block','if',7,'p_if_else','plyInmantaParser.py',219),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',230),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',236),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',241),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',247),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',252),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',257),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',262),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',267),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',272),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',278),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',283),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',289),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',295),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',296),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',302),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',303),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',304),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',309),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',310),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',311),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',312),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',319),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',325),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',326),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',332),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',338),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',339),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',340),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',341),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',342),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',343),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',350),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',356),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',362),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',367),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',373),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',379),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',386),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',391),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',396),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',401),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list mls','implement_def',5,'p_implement','plyInmantaParser.py',402),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',409),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression mls','implement_def',7,'p_implement_when','plyInmantaParser.py',410),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',420),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',432),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',437),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',442),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',448),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',459),
  ('relation -> relation_def mls','relation',2,'p_relation_outer_comment','plyInmantaParser.py',498),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',505),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',510),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',516),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',522),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',528),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',534),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',539),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',544),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',549),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',557),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',562),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',569),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',575),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',584),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',594),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',595),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',596),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',597),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',598),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',599),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',600),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',601),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',602),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',603),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',608),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',613),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',614),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',615),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',616),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',625),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',631),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',637),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',643),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',648),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',649),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',650),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',655),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',660),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',666),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',672),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',673),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',679),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',680),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',685),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',691),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',697),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',704),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',714),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',715),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',722),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',728),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',734),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',740),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',746),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',752),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',758),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',798),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',804),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',809),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',814),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',820),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',825),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',831),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',837),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',838),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',844),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',845),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',860),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',867),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',873),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',874),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',880),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',881),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',899),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',905),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',910),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',915),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',920),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',926),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',932),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',938),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',949),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',961),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',967),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',972),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',977),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',983),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',989),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',994),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1000),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',1005),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',1010),
]
