Metadata-Version: 2.1
Name: h4
Version: 0.1.0
Summary: Reinforcment Learning from Human Feedback
Home-page: https://github.com/huggingface/h4
Author: The Hugging Face team (past and future)
Author-email: lewis@huggingface.co
License: Apache
Keywords: nlp deep learning rlhf
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: huggingface-hub (<1.0,>=0.12.0)
Requires-Dist: numpy (>=1.24.2)
Requires-Dist: packaging (>=23.0)
Requires-Dist: tqdm (>=4.64.1)
Provides-Extra: dev
Requires-Dist: black (==23.1.0) ; extra == 'dev'
Requires-Dist: isort (>=5.12.0) ; extra == 'dev'
Requires-Dist: flake8 (>=6.0.0) ; extra == 'dev'
Provides-Extra: quality
Requires-Dist: black (==23.1.0) ; extra == 'quality'
Requires-Dist: isort (>=5.12.0) ; extra == 'quality'
Requires-Dist: flake8 (>=6.0.0) ; extra == 'quality'

# LLMs that are Helpful, Honest, Harmless, and Huggy ðŸ¤—

## Installation

Download and install `h4` by running:

```bash
python -m pip install h4
```

If you want the bleeding-edge version, install from source by running:

```bash
python -m pip install git+https://github.com/huggingface/h4.git
```

### Developer installation

To contribute code to this project, first create a Python virtual environment using e.g. Conda:

```bash
conda create -n h4 python=3.8 && conda activate h4
```

Then install the base requirements with:

```bash
python -m pip install -e '.[dev]'
```

This will install core packages like `black` and `isort` that we use to ensure consistent code formatting.

## Formatting your code

We use `black` and `isort` to ensure consistent code formatting. After following the installation steps, you can check your code locally by running:

```
make style && make quality
```
