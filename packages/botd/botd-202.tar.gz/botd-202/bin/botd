#!/usr/bin/env python3
# This file is placed in the Public Domain.


"The Python3 bot Namespace"


import os
import readline
import sys
import termios
import time
import traceback


sys.path.insert(0, os.getcwd())


from bot.default import Default
from bot.objects import format
from bot.storage import Wd


from bot.runtime.bus import Bus
from bot.runtime.config import Config
from bot.runtime.command import Command
from bot.runtime.event import Event
from bot.runtime.handler import Handler
from bot.runtime.scanner import scan
from bot.runtime.thread import launch
from bot.runtime.utils import privileges, wait
from bot.modules import cmd, irc, rss


Cfg = Config()
Wd.workdir = "/var/lib/botd/"


scan(cmd)
scan(irc)
scan(rss)


class CLI(Handler):

    @staticmethod
    def announce(txt):
        pass

    @staticmethod
    def raw(txt):
        print(txt)
        sys.stdout.flush()


class Console(CLI):

    def handle(self, event):
        Command.dispatch(event)
        event.wait()

    def poll(self):
        event = Event()
        event.orig = repr(self)
        event.txt = input("> ")
        return event


def daemon():
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    os.umask(0)
    sis = open("/dev/null", 'r')
    os.dup2(sis.fileno(), sys.stdin.fileno())
    sos = open("/dev/null", 'a+')
    ses = open("/dev/null", 'a+')
    os.dup2(sos.fileno(), sys.stdout.fileno())
    os.dup2(ses.fileno(), sys.stderr.fileno())


def waiter():
    got = []
    for ex in Command.errors:
        traceback.print_exception(type(ex), ex, ex.__traceback__)
        got.append(ex)
    for exc in got:
        Command.errors.remove(exc)


def wrap(func):
    fds = sys.stdin.fileno()
    gotterm = True
    try:
        old = termios.tcgetattr(fds)
    except termios.error:
        gotterm = False
    try:
        func()
    except (EOFError, KeyboardInterrupt):
        print("")
    finally:
        if gotterm:
            termios.tcsetattr(fds, termios.TCSADRAIN, old)
        waiter()


def main():
    Cfg.parse(" ".join(sys.argv[1:]))
    privileges("botd")
    #daemon()
    irc.init()
    rss.init()
    wait(waiter)


wrap(main)
