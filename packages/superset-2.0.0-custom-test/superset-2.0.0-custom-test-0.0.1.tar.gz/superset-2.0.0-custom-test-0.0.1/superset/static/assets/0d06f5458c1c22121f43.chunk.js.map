{"version":3,"file":"0d06f5458c1c22121f43.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/echarts/i18n/langRU-obj.js","webpack://superset/./plugins/plugin-chart-echarts/src/components/ExtraControls.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/Timeseries/EchartsTimeseries.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n(function(root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['exports'], factory);\r\n    } else if (\r\n        typeof exports === 'object' &&\r\n        typeof exports.nodeName !== 'string'\r\n    ) {\r\n        // CommonJS\r\n        factory(exports);\r\n    } else {\r\n        // Browser globals\r\n        factory({});\r\n    }\r\n})(this, function(exports) {\r\n\r\n\r\n/**\r\n * Language: Russian.\r\n */\r\n\r\nvar localeObj = {\r\n    time: {\r\n        month: [\r\n            'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',\r\n            'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n        ],\r\n        monthAbbr: [\r\n            'Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн',\r\n            'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'\r\n        ],\r\n        dayOfWeek: [\r\n            'Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'\r\n        ],\r\n        dayOfWeekAbbr: [\r\n            'вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'\r\n        ]\r\n    },\r\n    legend: {\r\n        selector: {\r\n            all: 'Всё',\r\n            inverse: 'Обратить'\r\n        }\r\n    },\r\n    toolbox: {\r\n        brush: {\r\n            title: {\r\n                rect: 'Выделить область',\r\n                polygon: 'Инструмент «Лассо»',\r\n                lineX: 'Горизонтальное выделение',\r\n                lineY: 'Вертикальное выделение',\r\n                keep: 'Оставить выбранное',\r\n                clear: 'Очистить выбранное'\r\n            }\r\n        },\r\n        dataView: {\r\n            title: 'Данные',\r\n            lang: ['Данные', 'Закрыть', 'Обновить']\r\n        },\r\n        dataZoom: {\r\n            title: {\r\n                zoom: 'Увеличить',\r\n                back: 'Сбросить увеличение'\r\n            }\r\n        },\r\n        magicType: {\r\n            title: {\r\n                line: 'Переключиться на линейный график',\r\n                bar: 'Переключиться на столбчатую диаграмму',\r\n                stack: 'Стопка',\r\n                tiled: 'Плитка'\r\n            }\r\n        },\r\n        restore: {\r\n            title: 'Восстановить'\r\n        },\r\n        saveAsImage: {\r\n            title: 'Сохранить картинку',\r\n            lang: ['Правый клик, чтобы сохранить картинку']\r\n        }\r\n    },\r\n    series: {\r\n        typeNames: {\r\n            pie: 'Круговая диаграмма',\r\n            bar: 'Столбчатая диаграмма',\r\n            line: 'Линейный график',\r\n            scatter: 'Точечная диаграмма',\r\n            effectScatter: 'Точечная диаграмма с волнами',\r\n            radar: 'Лепестковая диаграмма',\r\n            tree: 'Дерево',\r\n            treemap: 'Плоское дерево',\r\n            boxplot: 'Ящик с усами',\r\n            candlestick: 'Свечной график',\r\n            k: 'График К-линий',\r\n            heatmap: 'Тепловая карта',\r\n            map: 'Карта',\r\n            parallel: 'Диаграмма параллельных координат',\r\n            lines: 'Линейный граф',\r\n            graph: 'Граф отношений',\r\n            sankey: 'Диаграмма Санкей',\r\n            funnel: 'Воронкообразная диаграмма',\r\n            gauge: 'Шкала',\r\n            pictorialBar: 'Столбец-картинка',\r\n            themeRiver: 'Тематическая река',\r\n            sunburst: 'Солнечные лучи'\r\n        }\r\n    },\r\n    aria: {\r\n        general: {\r\n            withTitle: 'Это график, показывающий \"{title}\"',\r\n            withoutTitle: 'Это график'\r\n        },\r\n        series: {\r\n            single: {\r\n                prefix: '',\r\n                withName: ' с типом {seriesType} и именем {seriesName}.',\r\n                withoutName: ' с типом {seriesType}.'\r\n            },\r\n            multiple: {\r\n                prefix: '. Он состоит из {seriesCount} серий.',\r\n                withName:\r\n                    ' Серия {seriesId} имеет тип {seriesType} и показывает {seriesName}.',\r\n                withoutName: ' Серия {seriesId} имеет тип {seriesType}.',\r\n                separator: {\r\n                    middle: '',\r\n                    end: ''\r\n                }\r\n            }\r\n        },\r\n        data: {\r\n            allData: 'Данные таковы: ',\r\n            partialData: 'Первые {displayCnt} элементов: ',\r\n            withName: 'значение для {name} — {value}',\r\n            withoutName: '{value}',\r\n            separator: {\r\n                middle: ', ',\r\n                end: '. '\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n    for (var key in localeObj) {\r\n        if (localeObj.hasOwnProperty(key)) {\r\n            exports[key] = localeObj[key];\r\n        }\r\n    }\r\n        \r\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { HandlerFunction, JsonValue, styled } from '@superset-ui/core';\nimport {\n  RadioButtonOption,\n  sharedControlComponents,\n} from '@superset-ui/chart-controls';\nimport { AreaChartExtraControlsOptions } from '../constants';\n\nconst { RadioButtonControl } = sharedControlComponents;\n\nconst ExtraControlsWrapper = styled.div`\n  text-align: center;\n`;\n\nexport function useExtraControl<\n  F extends {\n    stack: any;\n    area: boolean;\n  },\n>({\n  formData,\n  setControlValue,\n}: {\n  formData: F;\n  setControlValue?: HandlerFunction;\n}) {\n  const { stack, area } = formData;\n  const [extraValue, setExtraValue] = useState<JsonValue | undefined>(\n    stack ?? undefined,\n  );\n\n  useEffect(() => {\n    setExtraValue(stack);\n  }, [stack]);\n\n  const extraControlsOptions = useMemo(() => {\n    if (area) {\n      return AreaChartExtraControlsOptions;\n    }\n    return [];\n  }, [area]);\n\n  const extraControlsHandler = useCallback(\n    (value: RadioButtonOption[0]) => {\n      if (area) {\n        if (setControlValue) {\n          setControlValue('stack', value);\n          setExtraValue(value);\n        }\n      }\n    },\n    [area, setControlValue],\n  );\n\n  return {\n    extraControlsOptions,\n    extraControlsHandler,\n    extraValue,\n  };\n}\n\nexport function ExtraControls<\n  F extends {\n    stack: any;\n    area: boolean;\n    showExtraControls: boolean;\n  },\n>({\n  formData,\n  setControlValue,\n}: {\n  formData: F;\n  setControlValue?: HandlerFunction;\n}) {\n  const { extraControlsOptions, extraControlsHandler, extraValue } =\n    useExtraControl<F>({\n      formData,\n      setControlValue,\n    });\n\n  if (!formData.showExtraControls) {\n    return null;\n  }\n\n  return (\n    <ExtraControlsWrapper>\n      <RadioButtonControl\n        options={extraControlsOptions}\n        onChange={extraControlsHandler}\n        value={extraValue}\n      />\n    </ExtraControlsWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useCallback, useRef } from 'react';\nimport { ViewRootGroup } from 'echarts/types/src/util/types';\nimport GlobalModel from 'echarts/types/src/model/Global';\nimport ComponentModel from 'echarts/types/src/model/Component';\nimport { EchartsHandler, EventHandlers } from '../types';\nimport Echart from '../components/Echart';\nimport { TimeseriesChartTransformedProps } from './types';\nimport { currentSeries } from '../utils/series';\nimport { ExtraControls } from '../components/ExtraControls';\n\nconst TIMER_DURATION = 300;\n\n// @ts-ignore\nexport default function EchartsTimeseries({\n  formData,\n  height,\n  width,\n  echartOptions,\n  groupby,\n  labelMap,\n  selectedValues,\n  setDataMask,\n  setControlValue,\n  legendData = [],\n}: TimeseriesChartTransformedProps) {\n  const { emitFilter, stack } = formData;\n  const echartRef = useRef<EchartsHandler | null>(null);\n  const lastTimeRef = useRef(Date.now());\n  const lastSelectedLegend = useRef('');\n  const clickTimer = useRef<ReturnType<typeof setTimeout>>();\n\n  const handleDoubleClickChange = useCallback(\n    (name?: string) => {\n      const echartInstance = echartRef.current?.getEchartInstance();\n      if (!name) {\n        currentSeries.legend = '';\n        echartInstance?.dispatchAction({\n          type: 'legendAllSelect',\n        });\n      } else {\n        legendData.forEach(datum => {\n          if (datum === name) {\n            currentSeries.legend = datum;\n            echartInstance?.dispatchAction({\n              type: 'legendSelect',\n              name: datum,\n            });\n          } else {\n            echartInstance?.dispatchAction({\n              type: 'legendUnSelect',\n              name: datum,\n            });\n          }\n        });\n      }\n    },\n    [legendData],\n  );\n\n  const getModelInfo = (target: ViewRootGroup, globalModel: GlobalModel) => {\n    let el = target;\n    let model: ComponentModel | null = null;\n    while (el) {\n      // eslint-disable-next-line no-underscore-dangle\n      const modelInfo = el.__ecComponentInfo;\n      if (modelInfo != null) {\n        model = globalModel.getComponent(modelInfo.mainType, modelInfo.index);\n        break;\n      }\n      el = el.parent;\n    }\n    return model;\n  };\n\n  const handleChange = useCallback(\n    (values: string[]) => {\n      if (!emitFilter) {\n        return;\n      }\n      const groupbyValues = values.map(value => labelMap[value]);\n\n      setDataMask({\n        extraFormData: {\n          filters:\n            values.length === 0\n              ? []\n              : groupby.map((col, idx) => {\n                  const val = groupbyValues.map(v => v[idx]);\n                  if (val === null || val === undefined)\n                    return {\n                      col,\n                      op: 'IS NULL',\n                    };\n                  return {\n                    col,\n                    op: 'IN',\n                    val: val as (string | number | boolean)[],\n                  };\n                }),\n        },\n        filterState: {\n          label: groupbyValues.length ? groupbyValues : undefined,\n          value: groupbyValues.length ? groupbyValues : null,\n          selectedValues: values.length ? values : null,\n        },\n      });\n    },\n    [groupby, labelMap, setDataMask, emitFilter],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      if (clickTimer.current) {\n        clearTimeout(clickTimer.current);\n      }\n      // Ensure that double-click events do not trigger single click event. So we put it in the timer.\n      clickTimer.current = setTimeout(() => {\n        const { seriesName: name } = props;\n        const values = Object.values(selectedValues);\n        if (values.includes(name)) {\n          handleChange(values.filter(v => v !== name));\n        } else {\n          handleChange([name]);\n        }\n      }, TIMER_DURATION);\n    },\n    mouseout: () => {\n      currentSeries.name = '';\n    },\n    mouseover: params => {\n      currentSeries.name = params.seriesName;\n    },\n    legendselectchanged: payload => {\n      const currentTime = Date.now();\n      // TIMER_DURATION is the interval between two legendselectchanged event\n      if (\n        currentTime - lastTimeRef.current < TIMER_DURATION &&\n        lastSelectedLegend.current === payload.name\n      ) {\n        // execute dbclick\n        handleDoubleClickChange(payload.name);\n      } else {\n        lastTimeRef.current = currentTime;\n        // remember last selected legend\n        lastSelectedLegend.current = payload.name;\n      }\n      // if all legend is unselected, we keep all selected\n      if (Object.values(payload.selected).every(i => !i)) {\n        handleDoubleClickChange();\n      }\n    },\n  };\n\n  const zrEventHandlers: EventHandlers = {\n    dblclick: params => {\n      // clear single click timer\n      if (clickTimer.current) {\n        clearTimeout(clickTimer.current);\n      }\n      const pointInPixel = [params.offsetX, params.offsetY];\n      const echartInstance = echartRef.current?.getEchartInstance();\n      if (echartInstance?.containPixel('grid', pointInPixel)) {\n        // do not trigger if click unstacked chart's blank area\n        if (!stack && params.target?.type === 'ec-polygon') return;\n        // @ts-ignore\n        const globalModel = echartInstance.getModel();\n        const model = getModelInfo(params.target, globalModel);\n        const seriesCount = globalModel.getSeriesCount();\n        const currentSeriesIndices = globalModel.getCurrentSeriesIndices();\n        if (model) {\n          const { name } = model;\n          if (seriesCount !== currentSeriesIndices.length) {\n            handleDoubleClickChange();\n          } else {\n            handleDoubleClickChange(name);\n          }\n        }\n      }\n    },\n  };\n\n  return (\n    <>\n      <ExtraControls formData={formData} setControlValue={setControlValue} />\n      <Echart\n        ref={echartRef}\n        height={height}\n        width={width}\n        echartOptions={echartOptions}\n        eventHandlers={eventHandlers}\n        zrEventHandlers={zrEventHandlers}\n        selectedValues={selectedValues}\n      />\n    </>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport { styled } from '@superset-ui/core';\nimport { ECharts, init } from 'echarts';\n// @ts-ignore\nimport langRU from 'echarts/i18n/langRU-obj';\nimport * as echarts from 'echarts/core'; // BY AS\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\necharts.registerLocale('RU', langRU);\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n  }: EchartsProps,\n  ref: React.Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  const chartRef = useRef<ECharts>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current, undefined, { locale: 'RU' });\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.resize({ width, height });\n    }\n  }, [width, height]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["exports","localeObj","time","month","monthAbbr","dayOfWeek","dayOfWeekAbbr","legend","selector","all","inverse","toolbox","brush","title","rect","polygon","lineX","lineY","keep","clear","dataView","lang","dataZoom","zoom","back","magicType","line","bar","stack","tiled","restore","saveAsImage","series","typeNames","pie","scatter","effectScatter","radar","tree","treemap","boxplot","candlestick","k","heatmap","map","parallel","lines","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","end","data","allData","partialData","key","hasOwnProperty","RadioButtonControl","ExtraControlsWrapper","style","ExtraControls","formData","setControlValue","extraControlsOptions","extraControlsHandler","extraValue","area","setExtraValue","useState","undefined","useEffect","useMemo","useCallback","value","useExtraControl","showExtraControls","options","onChange","EchartsTimeseries","height","width","echartOptions","groupby","labelMap","selectedValues","setDataMask","legendData","emitFilter","echartRef","useRef","lastTimeRef","Date","now","lastSelectedLegend","clickTimer","handleDoubleClickChange","name","echartInstance","current","getEchartInstance","forEach","datum","dispatchAction","type","handleChange","values","groupbyValues","extraFormData","filters","length","col","idx","val","v","op","filterState","label","eventHandlers","click","props","clearTimeout","setTimeout","seriesName","Object","includes","filter","mouseout","mouseover","params","legendselectchanged","payload","currentTime","selected","every","i","zrEventHandlers","dblclick","pointInPixel","offsetX","offsetY","containPixel","target","globalModel","getModel","model","el","modelInfo","__ecComponentInfo","getComponent","mainType","index","parent","getModelInfo","seriesCount","getSeriesCount","currentSeriesIndices","getCurrentSeriesIndices","Echart","ref","Styles","divRef","chartRef","currentSelection","keys","previousSelection","useImperativeHandle","locale","entries","handler","off","on","getZr","setOption","dataIndex","resize","forwardRef"],"sourceRoot":""}