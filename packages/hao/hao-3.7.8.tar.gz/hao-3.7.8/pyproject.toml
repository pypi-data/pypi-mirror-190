[tool.poetry]
name = "hao"
version = "3.7.8"
description = "conf, logs, namespace, etc"
authors = ["orctom <orctom@gmail.com>"]

license = "Apache-2.0"

readme = "README.md"

homepage = "https://github.com/orctom/hao"
repository = "https://github.com/orctom/hao"

keywords = ["config", "log", "namespace"]

classifiers = [
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]

[tool.poetry.dependencies]
python = ">=3.7,<4"
PyYAML = "*"
requests = "*"
charset-normalizer = "*"
regex = "*"
tqdm = "*"
decorator = "*"

# CVE-2020-26116, CVE-2021-33503
urllib3 = ">=1.26.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
elasticsearch = ">=7.0.0, <8"
pymongo = "*"
kafka-python = "*"
pymysql = "*"
DBUtils = "*"
mysql-client = "*"
psycopg2-binary = "*"
kombu = ">=4.6.0"
redis = "*"
oss2 = "*"
sqlalchemy = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
h-oss-init = "hao.oss:init"
h-oss-download = "hao.oss:download"
h-oss-upload = "hao.oss:upload"
h-run = "hao.cli:run"

[[tool.poetry.source]]
name = "aliyun"
url = "http://mirrors.aliyun.com/pypi/simple/"
default = true

[tool.black]
line-length = 135
target-version = ['py38']
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | data
)/
'''
