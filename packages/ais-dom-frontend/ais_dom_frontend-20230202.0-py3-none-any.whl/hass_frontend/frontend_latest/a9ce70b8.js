"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[87795],{87795:(e,t,n)=>{n.r(t);var i=n(49097),o=n.n(i);class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}set hass(e){this.notYetInitialized()?(this.initJsSIPIfNecessary(e),this.initCameraView(e)):this.cameraEntityHasNewAccessToken(e)&&this.updateCameraView(e),this.initDoorbellRinging(e)}setConfig(e){if(!e.camera_entity)throw new Error("You need to define a camera entity");if(!e.sip_settings)throw new Error("You need to define the SIP settings");if(!e.sip_settings.sip_wss_url)throw new Error("You need to define the SIP Secure Webservice url");if(!e.sip_settings.sip_server)throw new Error("You need to define the SIP Server (ip or hostname)");if(!e.sip_settings.sip_username)throw new Error("You need to define the SIP username");if(!e.sip_settings.sip_password)throw new Error("You need to define the SIP password");this.config=e;const t=this.shadowRoot;t.lastChild&&t.removeChild(t.lastChild);const n=document.createElement("ha-card"),i=document.createElement("div"),o=document.createElement("style");o.textContent="\n          ha-card {\n              /* sample css */\n          }\n          .buttons {\n              overflow: auto;\n              padding: 16px;\n              text-align: right;\n          } \n          .ring-buttons {\n              float: left;\n              background: var(--paper-dialog-background-color, var(--primary-background-color));\n              color: var(--paper-dialog-color, var(--primary-text-color));\n          }\n          #cameraview img{\n              object-fit: cover;\n              height: 400px;\n          }\n          mwc-button {\n              margin-right: 16px;\n          }\n          ",i.innerHTML="\n      <div id='cameraview'>\n          <p style=\"padding: 16px\">Initializing SIP connection and webcam view</p>\n          <audio id='audio-player'></audio>\n      </div>\n      <div class='buttons'>\n          <div class=\"ring-buttons\">\n              <mwc-button dense id='bell-everywhere'><ha-icon class=\"mdc-button__icon\" icon=\"mdi:bell-ring-outline\"></ha-icon></mwc-button>\n              <mwc-button dense id='bell-firstfloor'><ha-icon class=\"mdc-button__icon\" icon=\"mdi:bell-outline\"></ha-icon></mwc-button>\n              <mwc-button dense id='bell-off'><ha-icon class=\"mdc-button__icon\" icon=\"mdi:bell-off-outline\"></ha-icon></mwc-button>\n          </div>\n          <mwc-button raised id='btn-open-door'>Otw√≥rz drzwi</mwc-button>\n          <mwc-button style='display:none' raised id='btn-accept-call'>Accept</mwc-button>\n          <mwc-button style='display:none' raised id='btn-reject-call'>Reject</mwc-button>\n          <mwc-button style='display:none' raised id='btn-end-call'>End</mwc-button>\n      </div>\n      ",n.header="",n.appendChild(i),n.appendChild(o),t.appendChild(n)}getCardSize(){return 3}notYetInitialized(){return!this.aisSipDoorRing&&this.config}initJsSIPIfNecessary(e){const t={sockets:[new(o().WebSocketInterface)(this.config.sip_settings.sip_wss_url)],uri:`sip:${this.config.sip_settings.sip_username}@${this.config.sip_settings.sip_server}`,authorizationUser:`${this.config.sip_settings.sip_username}`,register:!0,noAnswerTimeout:60,displayName:"AIS",password:this.config.sip_settings.sip_password};this.aisSipDoorRing=new(o().UA)(t);const n={mediaConstraints:{audio:!0,video:!1}};this.aisSipDoorRing.on("registered",(()=>console.log("AIS SIP Door Ring registered with SIP Server"))),this.aisSipDoorRing.on("connected",(function(e){console.log("AIS SIP Door Ring connected ")})),this.aisSipDoorRing.on("disconnected",(function(e){console.log("AIS SIP Door Ring disconnected")})),this.aisSipDoorRing.on("unregistered",(function(e){console.log("AIS SIP Door Ring unregistered")})),this.aisSipDoorRing.on("registrationFailed",(function(e){console.log("AIS SIP Door Ring registrationFailed"),console.log("AIS Error: "+e.cause+" "+e.response)})),this.aisSipDoorRing.on("newMessage",(function(e){console.log("AIS SIP Door Ring newMessage"),console.log("AIS Message: "+e)})),this.aisSipDoorRing.on("sipEvent",(function(e){console.log("AIS SIP Door Ring sipEvent"),console.log("AIS Event: "+e)}));const i=this;this.aisSipDoorRing.on("newRTCSession",(function(t){const o=t.session;if("incoming"===o.direction){const t=i.getElementById("btn-accept-call"),s=i.getElementById("btn-reject-call"),a=i.getElementById("btn-end-call");o.on("accepted",(()=>{console.log("call accepted"),t.style.display="none",s.style.display="none",a.style.display="inline-flex"})),o.on("confirmed",(()=>console.log("call confirmed"))),o.on("ended",(()=>{console.log("call ended"),i.cleanup(e)})),o.on("failed",(()=>{console.log("call failed"),i.cleanup(e)})),o.on("peerconnection",(()=>{o.connection.addEventListener("addstream",(e=>{console.log("adding audiostream");const t=document.createElement("audio");t.srcObject=e.stream,t.play()}))})),t.addEventListener("click",(()=>o.answer(n))),s.addEventListener("click",(()=>o.terminate())),a.addEventListener("click",(()=>o.terminate())),t.style.display="inline-flex",s.style.display="inline-flex"}})),this.aisSipDoorRing.start()}initCameraView(e){this.cameraViewerShownTimeout=window.setTimeout((()=>this.isDoorPiNotShown()),15e3);const t=this.getElementById("cameraview"),n=document.createElement("img"),i=this.config.camera_entity;for(this.access_token=e.states[i].attributes.access_token,n.src=`/api/camera_proxy_stream/${i}?token=${this.access_token}`,n.style.width="100%";t.firstChild;)t.removeChild(t.firstChild);t.appendChild(n),console.log("initialized camera view")}updateCameraView(e){const t=this.shadowRoot.querySelector("#cameraview img"),n=this.config.camera_entity;this.access_token=e.states[n].attributes.access_token,t.src=`/api/camera_proxy_stream/${n}?token=${this.access_token}`}cameraEntityHasNewAccessToken(e){if(clearTimeout(this.cameraViewerShownTimeout),this.cameraViewerShownTimeout=window.setTimeout((()=>this.isDoorPiNotShown()),15e3),!this.aisSipDoorRing)return!1;return this.access_token!==e.states[this.config.camera_entity].attributes.access_token}initDoorbellRinging(e){this.setupBellRingingButton(e,"everywhere","firstfloor"),this.setupBellRingingButton(e,"firstfloor","off"),this.setupBellRingingButton(e,"off","everywhere")}setupBellRingingButton(e,t,n){const i=this.shadowRoot.querySelector(`#bell-${t}`);e.states["input_select.ais_doorbell"].state===`ring-${t}`?i.style.display="inline-flex":i.style.display="none",i.addEventListener("click",(()=>e.callService("input_select","select_option",{entity_id:"input_select.ais_doorbell",option:`ring-${n}`})))}isDoorPiNotShown(){const e=this.shadowRoot.querySelector("#cameraview img");this.isVisible(e)||this.stopCameraStreaming()}stopCameraStreaming(){console.log("Stopping camera stream...");this.shadowRoot.querySelector("#cameraview img").src="",this.access_token=void 0}isVisible(e){return!!e&&!(!e.offsetParent&&0===e.offsetWidth&&0===e.offsetHeight)}cleanup(e){const t=this.getElementById("btn-accept-call"),n=this.getElementById("btn-reject-call"),i=this.getElementById("btn-end-call"),o=t.cloneNode(!0);o.style.display="none",t.parentNode.replaceChild(o,t);const s=n.cloneNode(!0);s.style.display="none",n.parentNode.replaceChild(s,n);const a=i.cloneNode(!0);a.style.display="none",i.parentNode.replaceChild(a,i),e.callService("input_boolean","turn_off",{entity_id:"input_boolean.doorbell"})}getElementById(e){return this.shadowRoot.querySelector(`#${e}`)}}customElements.define("hui-ais-videoring-card",s)}}]);