# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kaskada/kaskada/v2alpha/query_service.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from kaskada.kaskada.v1alpha import fenl_diagnostics_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_fenl__diagnostics__pb2
from kaskada.kaskada.v1alpha import schema_pb2 as kaskada_dot_kaskada_dot_v1alpha_dot_schema__pb2
from kaskada.kaskada.v2alpha import shared_pb2 as kaskada_dot_kaskada_dot_v2alpha_dot_shared__pb2
from validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+kaskada/kaskada/v2alpha/query_service.proto\x12\x17kaskada.kaskada.v2alpha\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.kaskada/kaskada/v1alpha/fenl_diagnostics.proto\x1a$kaskada/kaskada/v1alpha/schema.proto\x1a$kaskada/kaskada/v2alpha/shared.proto\x1a\x17validate/validate.proto\":\n\x0fLatestDataToken\x12\'\n\rdata_token_id\x18\x01 \x01(\tB\x03\xe0\x41\x03R\x0b\x64\x61taTokenId\"@\n\x11SpecificDataToken\x12+\n\rdata_token_id\x18\x01 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\x0b\x64\x61taTokenId\"\xd4\x01\n\tDataToken\x12V\n\x11latest_data_token\x18\x01 \x01(\x0b\x32(.kaskada.kaskada.v2alpha.LatestDataTokenH\x00R\x0flatestDataToken\x12\\\n\x13specific_data_token\x18\x02 \x01(\x0b\x32*.kaskada.kaskada.v2alpha.SpecificDataTokenH\x00R\x11specificDataTokenB\x11\n\ndata_token\x12\x03\xf8\x42\x01\"Z\n\tQueryView\x12$\n\tview_name\x18\x01 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\x08viewName\x12\'\n\nexpression\x18\x02 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\nexpression\"\x14\n\x12\x44\x65stinationParquet\",\n\x14\x44\x65stinationRedisBulk\x12\x14\n\x05shape\x18\x01 \x03(\x05R\x05shape\"m\n\x12\x44\x65stinationRedisAI\x12\x19\n\x02\x64\x62\x18\x01 \x01(\x05\x42\t\xfa\x42\x06\x1a\x04\x18\x0f(\x00R\x02\x64\x62\x12\x1b\n\x04host\x18\x02 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\x04host\x12\x1f\n\x04port\x18\x03 \x01(\x05\x42\x0b\xfa\x42\x08\x1a\x06\x18\xff\xff\x03 \x00R\x04port\"\xeb\x01\n\x0b\x44\x65stination\x12\x45\n\x07parquet\x18\x01 \x01(\x0b\x32+.kaskada.kaskada.v2alpha.DestinationParquetR\x07parquet\x12L\n\nredis_bulk\x18\x02 \x01(\x0b\x32-.kaskada.kaskada.v2alpha.DestinationRedisBulkR\tredisBulk\x12G\n\tredis_a_i\x18\x03 \x01(\x0b\x32+.kaskada.kaskada.v2alpha.DestinationRedisAIR\x07redisAI\"V\n\nAllResults\x12H\n\x12\x63hanged_since_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x10\x63hangedSinceTime\"\xa0\x01\n\x0c\x46inalResults\x12H\n\x12\x63hanged_since_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x10\x63hangedSinceTime\x12\x46\n\x11\x66inal_result_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0f\x66inalResultTime\"\xa6\x01\n\x12\x46inalResultsAtTime\x12H\n\x12\x63hanged_since_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x10\x63hangedSinceTime\x12\x46\n\x11\x66inal_result_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x0f\x66inalResultTime\"\xa0\x02\n\x0eResultBehavior\x12\x46\n\x0b\x61ll_results\x18\x01 \x01(\x0b\x32#.kaskada.kaskada.v2alpha.AllResultsH\x00R\nallResults\x12L\n\rfinal_results\x18\x02 \x01(\x0b\x32%.kaskada.kaskada.v2alpha.FinalResultsH\x00R\x0c\x66inalResults\x12`\n\x15\x66inal_results_at_time\x18\x03 \x01(\x0b\x32+.kaskada.kaskada.v2alpha.FinalResultsAtTimeH\x00R\x12\x66inalResultsAtTimeB\x16\n\x0fresult_behavior\x12\x03\xf8\x42\x01\"0\n\x0bQueryLimits\x12!\n\x0cpreview_rows\x18\x01 \x01(\x03R\x0bpreviewRows\"F\n\nQueryViews\x12\x38\n\x05views\x18\x01 \x03(\x0b\x32\".kaskada.kaskada.v2alpha.QueryViewR\x05views\"\x9a\x03\n\x0bQueryConfig\x12\x41\n\ndata_token\x18\x01 \x01(\x0b\x32\".kaskada.kaskada.v2alpha.DataTokenR\tdataToken\x12;\n\x05slice\x18\x02 \x01(\x0b\x32%.kaskada.kaskada.v2alpha.SliceRequestR\x05slice\x12\x46\n\x0b\x64\x65stination\x18\x03 \x01(\x0b\x32$.kaskada.kaskada.v2alpha.DestinationR\x0b\x64\x65stination\x12P\n\x0fresult_behavior\x18\x04 \x01(\x0b\x32\'.kaskada.kaskada.v2alpha.ResultBehaviorR\x0eresultBehavior\x12<\n\x06limits\x18\x05 \x01(\x0b\x32$.kaskada.kaskada.v2alpha.QueryLimitsR\x06limits\x12\x33\n\x15\x65xperimental_features\x18\x06 \x03(\tR\x14\x65xperimentalFeatures\"!\n\x0bParquetURLs\x12\x12\n\x04urls\x18\x01 \x03(\tR\x04urls\"#\n\rRedisBulkURLs\x12\x12\n\x04urls\x18\x01 \x03(\tR\x04urls\"\xa7\x01\n\x0cQueryOutputs\x12G\n\x0cparquet_urls\x18\x01 \x01(\x0b\x32$.kaskada.kaskada.v2alpha.ParquetURLsR\x0bparquetUrls\x12N\n\x0fredis_bulk_urls\x18\x02 \x01(\x0b\x32&.kaskada.kaskada.v2alpha.RedisBulkURLsR\rredisBulkUrls\"\xdd\x01\n\x0cQueryResults\x12?\n\x07outputs\x18\x01 \x01(\x0b\x32%.kaskada.kaskada.v2alpha.QueryOutputsR\x07outputs\x12S\n\x10\x66\x65nl_diagnostics\x18\x02 \x01(\x0b\x32(.kaskada.kaskada.v1alpha.FenlDiagnosticsR\x0f\x66\x65nlDiagnostics\x12\x37\n\x06schema\x18\x03 \x01(\x0b\x32\x1f.kaskada.kaskada.v1alpha.SchemaR\x06schema\"\xc3\x02\n\x0cQueryMetrics\x12@\n\x0etime_preparing\x18\x01 \x01(\x0b\x32\x19.google.protobuf.DurationR\rtimePreparing\x12@\n\x0etime_computing\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationR\rtimeComputing\x12!\n\x0coutput_files\x18\x03 \x01(\x03R\x0boutputFiles\x12(\n\x10total_input_rows\x18\x04 \x01(\x03R\x0etotalInputRows\x12\x30\n\x14processed_input_rows\x18\x05 \x01(\x03R\x12processedInputRows\x12\x30\n\x14produced_output_rows\x18\x06 \x01(\x03R\x12producedOutputRows\"\xa3\x04\n\x05Query\x12\x1e\n\x08query_id\x18\x01 \x01(\tB\x03\xe0\x41\x03R\x07queryId\x12@\n\x0b\x63reate_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03R\ncreateTime\x12@\n\x0bupdate_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03R\nupdateTime\x12\'\n\nexpression\x18\x04 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\nexpression\x12>\n\x05views\x18\x05 \x01(\x0b\x32#.kaskada.kaskada.v2alpha.QueryViewsB\x03\xe0\x41\x03R\x05views\x12\x41\n\x06\x63onfig\x18\x06 \x01(\x0b\x32$.kaskada.kaskada.v2alpha.QueryConfigB\x03\xe0\x41\x03R\x06\x63onfig\x12>\n\x05state\x18\x07 \x01(\x0e\x32#.kaskada.kaskada.v2alpha.QueryStateB\x03\xe0\x41\x03R\x05state\x12\x44\n\x07results\x18\x08 \x01(\x0b\x32%.kaskada.kaskada.v2alpha.QueryResultsB\x03\xe0\x41\x03R\x07results\x12\x44\n\x07metrics\x18\t \x01(\x0b\x32%.kaskada.kaskada.v2alpha.QueryMetricsB\x03\xe0\x41\x03R\x07metrics\"\xcf\x01\n\x12\x43reateQueryRequest\x12\'\n\nexpression\x18\x01 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\nexpression\x12\x39\n\x05views\x18\x02 \x01(\x0b\x32#.kaskada.kaskada.v2alpha.QueryViewsR\x05views\x12<\n\x06\x63onfig\x18\x03 \x01(\x0b\x32$.kaskada.kaskada.v2alpha.QueryConfigR\x06\x63onfig\x12\x17\n\x07\x64ry_run\x18\x04 \x01(\x08R\x06\x64ryRun\"\x9d\x01\n\x13\x43reateQueryResponse\x12\x34\n\x05query\x18\x01 \x01(\x0b\x32\x1e.kaskada.kaskada.v2alpha.QueryR\x05query\x12P\n\x0frequest_details\x18\x02 \x01(\x0b\x32\'.kaskada.kaskada.v2alpha.RequestDetailsR\x0erequestDetails\"8\n\x12\x44\x65leteQueryRequest\x12\"\n\x08query_id\x18\x01 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\x07queryId\"g\n\x13\x44\x65leteQueryResponse\x12P\n\x0frequest_details\x18\x01 \x01(\x0b\x32\'.kaskada.kaskada.v2alpha.RequestDetailsR\x0erequestDetails\"5\n\x0fGetQueryRequest\x12\"\n\x08query_id\x18\x01 \x01(\tB\x07\xfa\x42\x04r\x02\x10\x01R\x07queryId\"\x9a\x01\n\x10GetQueryResponse\x12\x34\n\x05query\x18\x01 \x01(\x0b\x32\x1e.kaskada.kaskada.v2alpha.QueryR\x05query\x12P\n\x0frequest_details\x18\x02 \x01(\x0b\x32\'.kaskada.kaskada.v2alpha.RequestDetailsR\x0erequestDetails\"t\n\x12ListQueriesRequest\x12\x16\n\x06search\x18\x01 \x01(\tR\x06search\x12\'\n\tpage_size\x18\x02 \x01(\x05\x42\n\xfa\x42\x07\x1a\x05\x18\xe8\x07(\x00R\x08pageSize\x12\x1d\n\npage_token\x18\x03 \x01(\tR\tpageToken\"\xc9\x01\n\x13ListQueriesResponse\x12\x38\n\x07queries\x18\x01 \x03(\x0b\x32\x1e.kaskada.kaskada.v2alpha.QueryR\x07queries\x12&\n\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12P\n\x0frequest_details\x18\x03 \x01(\x0b\x32\'.kaskada.kaskada.v2alpha.RequestDetailsR\x0erequestDetails*\xc5\x01\n\nQueryState\x12\x1b\n\x17QUERY_STATE_UNSPECIFIED\x10\x00\x12\x18\n\x14QUERY_STATE_COMPILED\x10\x01\x12\x19\n\x15QUERY_STATE_PREPARING\x10\x02\x12\x18\n\x14QUERY_STATE_PREPARED\x10\x03\x12\x19\n\x15QUERY_STATE_COMPUTING\x10\x04\x12\x17\n\x13QUERY_STATE_SUCCESS\x10\x05\x12\x17\n\x13QUERY_STATE_FAILURE\x10\x06\x32\xae\x04\n\x0cQueryService\x12\x83\x01\n\x0b\x43reateQuery\x12+.kaskada.kaskada.v2alpha.CreateQueryRequest\x1a,.kaskada.kaskada.v2alpha.CreateQueryResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/v2alpha/query\x12\x8d\x01\n\x0b\x44\x65leteQuery\x12+.kaskada.kaskada.v2alpha.DeleteQueryRequest\x1a,.kaskada.kaskada.v2alpha.DeleteQueryResponse\"#\x82\xd3\xe4\x93\x02\x1d*\x1b/v2alpha/query/{query_id=*}\x12\x84\x01\n\x08GetQuery\x12(.kaskada.kaskada.v2alpha.GetQueryRequest\x1a).kaskada.kaskada.v2alpha.GetQueryResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v2alpha/query/{query_id=*}\x12\x80\x01\n\x0bListQueries\x12+.kaskada.kaskada.v2alpha.ListQueriesRequest\x1a,.kaskada.kaskada.v2alpha.ListQueriesResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v2alpha/queryB\xfa\x01\n\x1b\x63om.kaskada.kaskada.v2alphaB\x11QueryServiceProtoP\x01ZJgithub.com/riptano/kaskada/wren/gen/kaskada/kaskada/v2alpha;kaskadav2alpha\xa2\x02\x03KKX\xaa\x02\x17Kaskada.Kaskada.V2alpha\xca\x02\x17Kaskada\\Kaskada\\V2alpha\xe2\x02#Kaskada\\Kaskada\\V2alpha\\GPBMetadata\xea\x02\x19Kaskada::Kaskada::V2alphab\x06proto3')

_QUERYSTATE = DESCRIPTOR.enum_types_by_name['QueryState']
QueryState = enum_type_wrapper.EnumTypeWrapper(_QUERYSTATE)
QUERY_STATE_UNSPECIFIED = 0
QUERY_STATE_COMPILED = 1
QUERY_STATE_PREPARING = 2
QUERY_STATE_PREPARED = 3
QUERY_STATE_COMPUTING = 4
QUERY_STATE_SUCCESS = 5
QUERY_STATE_FAILURE = 6


_LATESTDATATOKEN = DESCRIPTOR.message_types_by_name['LatestDataToken']
_SPECIFICDATATOKEN = DESCRIPTOR.message_types_by_name['SpecificDataToken']
_DATATOKEN = DESCRIPTOR.message_types_by_name['DataToken']
_QUERYVIEW = DESCRIPTOR.message_types_by_name['QueryView']
_DESTINATIONPARQUET = DESCRIPTOR.message_types_by_name['DestinationParquet']
_DESTINATIONREDISBULK = DESCRIPTOR.message_types_by_name['DestinationRedisBulk']
_DESTINATIONREDISAI = DESCRIPTOR.message_types_by_name['DestinationRedisAI']
_DESTINATION = DESCRIPTOR.message_types_by_name['Destination']
_ALLRESULTS = DESCRIPTOR.message_types_by_name['AllResults']
_FINALRESULTS = DESCRIPTOR.message_types_by_name['FinalResults']
_FINALRESULTSATTIME = DESCRIPTOR.message_types_by_name['FinalResultsAtTime']
_RESULTBEHAVIOR = DESCRIPTOR.message_types_by_name['ResultBehavior']
_QUERYLIMITS = DESCRIPTOR.message_types_by_name['QueryLimits']
_QUERYVIEWS = DESCRIPTOR.message_types_by_name['QueryViews']
_QUERYCONFIG = DESCRIPTOR.message_types_by_name['QueryConfig']
_PARQUETURLS = DESCRIPTOR.message_types_by_name['ParquetURLs']
_REDISBULKURLS = DESCRIPTOR.message_types_by_name['RedisBulkURLs']
_QUERYOUTPUTS = DESCRIPTOR.message_types_by_name['QueryOutputs']
_QUERYRESULTS = DESCRIPTOR.message_types_by_name['QueryResults']
_QUERYMETRICS = DESCRIPTOR.message_types_by_name['QueryMetrics']
_QUERY = DESCRIPTOR.message_types_by_name['Query']
_CREATEQUERYREQUEST = DESCRIPTOR.message_types_by_name['CreateQueryRequest']
_CREATEQUERYRESPONSE = DESCRIPTOR.message_types_by_name['CreateQueryResponse']
_DELETEQUERYREQUEST = DESCRIPTOR.message_types_by_name['DeleteQueryRequest']
_DELETEQUERYRESPONSE = DESCRIPTOR.message_types_by_name['DeleteQueryResponse']
_GETQUERYREQUEST = DESCRIPTOR.message_types_by_name['GetQueryRequest']
_GETQUERYRESPONSE = DESCRIPTOR.message_types_by_name['GetQueryResponse']
_LISTQUERIESREQUEST = DESCRIPTOR.message_types_by_name['ListQueriesRequest']
_LISTQUERIESRESPONSE = DESCRIPTOR.message_types_by_name['ListQueriesResponse']
LatestDataToken = _reflection.GeneratedProtocolMessageType('LatestDataToken', (_message.Message,), {
  'DESCRIPTOR' : _LATESTDATATOKEN,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.LatestDataToken)
  })
_sym_db.RegisterMessage(LatestDataToken)

SpecificDataToken = _reflection.GeneratedProtocolMessageType('SpecificDataToken', (_message.Message,), {
  'DESCRIPTOR' : _SPECIFICDATATOKEN,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.SpecificDataToken)
  })
_sym_db.RegisterMessage(SpecificDataToken)

DataToken = _reflection.GeneratedProtocolMessageType('DataToken', (_message.Message,), {
  'DESCRIPTOR' : _DATATOKEN,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.DataToken)
  })
_sym_db.RegisterMessage(DataToken)

QueryView = _reflection.GeneratedProtocolMessageType('QueryView', (_message.Message,), {
  'DESCRIPTOR' : _QUERYVIEW,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryView)
  })
_sym_db.RegisterMessage(QueryView)

DestinationParquet = _reflection.GeneratedProtocolMessageType('DestinationParquet', (_message.Message,), {
  'DESCRIPTOR' : _DESTINATIONPARQUET,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.DestinationParquet)
  })
_sym_db.RegisterMessage(DestinationParquet)

DestinationRedisBulk = _reflection.GeneratedProtocolMessageType('DestinationRedisBulk', (_message.Message,), {
  'DESCRIPTOR' : _DESTINATIONREDISBULK,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.DestinationRedisBulk)
  })
_sym_db.RegisterMessage(DestinationRedisBulk)

DestinationRedisAI = _reflection.GeneratedProtocolMessageType('DestinationRedisAI', (_message.Message,), {
  'DESCRIPTOR' : _DESTINATIONREDISAI,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.DestinationRedisAI)
  })
_sym_db.RegisterMessage(DestinationRedisAI)

Destination = _reflection.GeneratedProtocolMessageType('Destination', (_message.Message,), {
  'DESCRIPTOR' : _DESTINATION,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.Destination)
  })
_sym_db.RegisterMessage(Destination)

AllResults = _reflection.GeneratedProtocolMessageType('AllResults', (_message.Message,), {
  'DESCRIPTOR' : _ALLRESULTS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.AllResults)
  })
_sym_db.RegisterMessage(AllResults)

FinalResults = _reflection.GeneratedProtocolMessageType('FinalResults', (_message.Message,), {
  'DESCRIPTOR' : _FINALRESULTS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.FinalResults)
  })
_sym_db.RegisterMessage(FinalResults)

FinalResultsAtTime = _reflection.GeneratedProtocolMessageType('FinalResultsAtTime', (_message.Message,), {
  'DESCRIPTOR' : _FINALRESULTSATTIME,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.FinalResultsAtTime)
  })
_sym_db.RegisterMessage(FinalResultsAtTime)

ResultBehavior = _reflection.GeneratedProtocolMessageType('ResultBehavior', (_message.Message,), {
  'DESCRIPTOR' : _RESULTBEHAVIOR,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.ResultBehavior)
  })
_sym_db.RegisterMessage(ResultBehavior)

QueryLimits = _reflection.GeneratedProtocolMessageType('QueryLimits', (_message.Message,), {
  'DESCRIPTOR' : _QUERYLIMITS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryLimits)
  })
_sym_db.RegisterMessage(QueryLimits)

QueryViews = _reflection.GeneratedProtocolMessageType('QueryViews', (_message.Message,), {
  'DESCRIPTOR' : _QUERYVIEWS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryViews)
  })
_sym_db.RegisterMessage(QueryViews)

QueryConfig = _reflection.GeneratedProtocolMessageType('QueryConfig', (_message.Message,), {
  'DESCRIPTOR' : _QUERYCONFIG,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryConfig)
  })
_sym_db.RegisterMessage(QueryConfig)

ParquetURLs = _reflection.GeneratedProtocolMessageType('ParquetURLs', (_message.Message,), {
  'DESCRIPTOR' : _PARQUETURLS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.ParquetURLs)
  })
_sym_db.RegisterMessage(ParquetURLs)

RedisBulkURLs = _reflection.GeneratedProtocolMessageType('RedisBulkURLs', (_message.Message,), {
  'DESCRIPTOR' : _REDISBULKURLS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.RedisBulkURLs)
  })
_sym_db.RegisterMessage(RedisBulkURLs)

QueryOutputs = _reflection.GeneratedProtocolMessageType('QueryOutputs', (_message.Message,), {
  'DESCRIPTOR' : _QUERYOUTPUTS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryOutputs)
  })
_sym_db.RegisterMessage(QueryOutputs)

QueryResults = _reflection.GeneratedProtocolMessageType('QueryResults', (_message.Message,), {
  'DESCRIPTOR' : _QUERYRESULTS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryResults)
  })
_sym_db.RegisterMessage(QueryResults)

QueryMetrics = _reflection.GeneratedProtocolMessageType('QueryMetrics', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMETRICS,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.QueryMetrics)
  })
_sym_db.RegisterMessage(QueryMetrics)

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), {
  'DESCRIPTOR' : _QUERY,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.Query)
  })
_sym_db.RegisterMessage(Query)

CreateQueryRequest = _reflection.GeneratedProtocolMessageType('CreateQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEQUERYREQUEST,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.CreateQueryRequest)
  })
_sym_db.RegisterMessage(CreateQueryRequest)

CreateQueryResponse = _reflection.GeneratedProtocolMessageType('CreateQueryResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEQUERYRESPONSE,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.CreateQueryResponse)
  })
_sym_db.RegisterMessage(CreateQueryResponse)

DeleteQueryRequest = _reflection.GeneratedProtocolMessageType('DeleteQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEQUERYREQUEST,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.DeleteQueryRequest)
  })
_sym_db.RegisterMessage(DeleteQueryRequest)

DeleteQueryResponse = _reflection.GeneratedProtocolMessageType('DeleteQueryResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEQUERYRESPONSE,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.DeleteQueryResponse)
  })
_sym_db.RegisterMessage(DeleteQueryResponse)

GetQueryRequest = _reflection.GeneratedProtocolMessageType('GetQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETQUERYREQUEST,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.GetQueryRequest)
  })
_sym_db.RegisterMessage(GetQueryRequest)

GetQueryResponse = _reflection.GeneratedProtocolMessageType('GetQueryResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETQUERYRESPONSE,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.GetQueryResponse)
  })
_sym_db.RegisterMessage(GetQueryResponse)

ListQueriesRequest = _reflection.GeneratedProtocolMessageType('ListQueriesRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTQUERIESREQUEST,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.ListQueriesRequest)
  })
_sym_db.RegisterMessage(ListQueriesRequest)

ListQueriesResponse = _reflection.GeneratedProtocolMessageType('ListQueriesResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTQUERIESRESPONSE,
  '__module__' : 'kaskada.kaskada.v2alpha.query_service_pb2'
  # @@protoc_insertion_point(class_scope:kaskada.kaskada.v2alpha.ListQueriesResponse)
  })
_sym_db.RegisterMessage(ListQueriesResponse)

_QUERYSERVICE = DESCRIPTOR.services_by_name['QueryService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\033com.kaskada.kaskada.v2alphaB\021QueryServiceProtoP\001ZJgithub.com/riptano/kaskada/wren/gen/kaskada/kaskada/v2alpha;kaskadav2alpha\242\002\003KKX\252\002\027Kaskada.Kaskada.V2alpha\312\002\027Kaskada\\Kaskada\\V2alpha\342\002#Kaskada\\Kaskada\\V2alpha\\GPBMetadata\352\002\031Kaskada::Kaskada::V2alpha'
  _LATESTDATATOKEN.fields_by_name['data_token_id']._options = None
  _LATESTDATATOKEN.fields_by_name['data_token_id']._serialized_options = b'\340A\003'
  _SPECIFICDATATOKEN.fields_by_name['data_token_id']._options = None
  _SPECIFICDATATOKEN.fields_by_name['data_token_id']._serialized_options = b'\372B\004r\002\020\001'
  _DATATOKEN.oneofs_by_name['data_token']._options = None
  _DATATOKEN.oneofs_by_name['data_token']._serialized_options = b'\370B\001'
  _QUERYVIEW.fields_by_name['view_name']._options = None
  _QUERYVIEW.fields_by_name['view_name']._serialized_options = b'\372B\004r\002\020\001'
  _QUERYVIEW.fields_by_name['expression']._options = None
  _QUERYVIEW.fields_by_name['expression']._serialized_options = b'\372B\004r\002\020\001'
  _DESTINATIONREDISAI.fields_by_name['db']._options = None
  _DESTINATIONREDISAI.fields_by_name['db']._serialized_options = b'\372B\006\032\004\030\017(\000'
  _DESTINATIONREDISAI.fields_by_name['host']._options = None
  _DESTINATIONREDISAI.fields_by_name['host']._serialized_options = b'\372B\004r\002\020\001'
  _DESTINATIONREDISAI.fields_by_name['port']._options = None
  _DESTINATIONREDISAI.fields_by_name['port']._serialized_options = b'\372B\010\032\006\030\377\377\003 \000'
  _RESULTBEHAVIOR.oneofs_by_name['result_behavior']._options = None
  _RESULTBEHAVIOR.oneofs_by_name['result_behavior']._serialized_options = b'\370B\001'
  _QUERY.fields_by_name['query_id']._options = None
  _QUERY.fields_by_name['query_id']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['create_time']._options = None
  _QUERY.fields_by_name['create_time']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['update_time']._options = None
  _QUERY.fields_by_name['update_time']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['expression']._options = None
  _QUERY.fields_by_name['expression']._serialized_options = b'\372B\004r\002\020\001'
  _QUERY.fields_by_name['views']._options = None
  _QUERY.fields_by_name['views']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['config']._options = None
  _QUERY.fields_by_name['config']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['state']._options = None
  _QUERY.fields_by_name['state']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['results']._options = None
  _QUERY.fields_by_name['results']._serialized_options = b'\340A\003'
  _QUERY.fields_by_name['metrics']._options = None
  _QUERY.fields_by_name['metrics']._serialized_options = b'\340A\003'
  _CREATEQUERYREQUEST.fields_by_name['expression']._options = None
  _CREATEQUERYREQUEST.fields_by_name['expression']._serialized_options = b'\372B\004r\002\020\001'
  _DELETEQUERYREQUEST.fields_by_name['query_id']._options = None
  _DELETEQUERYREQUEST.fields_by_name['query_id']._serialized_options = b'\372B\004r\002\020\001'
  _GETQUERYREQUEST.fields_by_name['query_id']._options = None
  _GETQUERYREQUEST.fields_by_name['query_id']._serialized_options = b'\372B\004r\002\020\001'
  _LISTQUERIESREQUEST.fields_by_name['page_size']._options = None
  _LISTQUERIESREQUEST.fields_by_name['page_size']._serialized_options = b'\372B\007\032\005\030\350\007(\000'
  _QUERYSERVICE.methods_by_name['CreateQuery']._options = None
  _QUERYSERVICE.methods_by_name['CreateQuery']._serialized_options = b'\202\323\344\223\002\023:\001*\"\016/v2alpha/query'
  _QUERYSERVICE.methods_by_name['DeleteQuery']._options = None
  _QUERYSERVICE.methods_by_name['DeleteQuery']._serialized_options = b'\202\323\344\223\002\035*\033/v2alpha/query/{query_id=*}'
  _QUERYSERVICE.methods_by_name['GetQuery']._options = None
  _QUERYSERVICE.methods_by_name['GetQuery']._serialized_options = b'\202\323\344\223\002\035\022\033/v2alpha/query/{query_id=*}'
  _QUERYSERVICE.methods_by_name['ListQueries']._options = None
  _QUERYSERVICE.methods_by_name['ListQueries']._serialized_options = b'\202\323\344\223\002\020\022\016/v2alpha/query'
  _QUERYSTATE._serialized_start=4855
  _QUERYSTATE._serialized_end=5052
  _LATESTDATATOKEN._serialized_start=349
  _LATESTDATATOKEN._serialized_end=407
  _SPECIFICDATATOKEN._serialized_start=409
  _SPECIFICDATATOKEN._serialized_end=473
  _DATATOKEN._serialized_start=476
  _DATATOKEN._serialized_end=688
  _QUERYVIEW._serialized_start=690
  _QUERYVIEW._serialized_end=780
  _DESTINATIONPARQUET._serialized_start=782
  _DESTINATIONPARQUET._serialized_end=802
  _DESTINATIONREDISBULK._serialized_start=804
  _DESTINATIONREDISBULK._serialized_end=848
  _DESTINATIONREDISAI._serialized_start=850
  _DESTINATIONREDISAI._serialized_end=959
  _DESTINATION._serialized_start=962
  _DESTINATION._serialized_end=1197
  _ALLRESULTS._serialized_start=1199
  _ALLRESULTS._serialized_end=1285
  _FINALRESULTS._serialized_start=1288
  _FINALRESULTS._serialized_end=1448
  _FINALRESULTSATTIME._serialized_start=1451
  _FINALRESULTSATTIME._serialized_end=1617
  _RESULTBEHAVIOR._serialized_start=1620
  _RESULTBEHAVIOR._serialized_end=1908
  _QUERYLIMITS._serialized_start=1910
  _QUERYLIMITS._serialized_end=1958
  _QUERYVIEWS._serialized_start=1960
  _QUERYVIEWS._serialized_end=2030
  _QUERYCONFIG._serialized_start=2033
  _QUERYCONFIG._serialized_end=2443
  _PARQUETURLS._serialized_start=2445
  _PARQUETURLS._serialized_end=2478
  _REDISBULKURLS._serialized_start=2480
  _REDISBULKURLS._serialized_end=2515
  _QUERYOUTPUTS._serialized_start=2518
  _QUERYOUTPUTS._serialized_end=2685
  _QUERYRESULTS._serialized_start=2688
  _QUERYRESULTS._serialized_end=2909
  _QUERYMETRICS._serialized_start=2912
  _QUERYMETRICS._serialized_end=3235
  _QUERY._serialized_start=3238
  _QUERY._serialized_end=3785
  _CREATEQUERYREQUEST._serialized_start=3788
  _CREATEQUERYREQUEST._serialized_end=3995
  _CREATEQUERYRESPONSE._serialized_start=3998
  _CREATEQUERYRESPONSE._serialized_end=4155
  _DELETEQUERYREQUEST._serialized_start=4157
  _DELETEQUERYREQUEST._serialized_end=4213
  _DELETEQUERYRESPONSE._serialized_start=4215
  _DELETEQUERYRESPONSE._serialized_end=4318
  _GETQUERYREQUEST._serialized_start=4320
  _GETQUERYREQUEST._serialized_end=4373
  _GETQUERYRESPONSE._serialized_start=4376
  _GETQUERYRESPONSE._serialized_end=4530
  _LISTQUERIESREQUEST._serialized_start=4532
  _LISTQUERIESREQUEST._serialized_end=4648
  _LISTQUERIESRESPONSE._serialized_start=4651
  _LISTQUERIESRESPONSE._serialized_end=4852
  _QUERYSERVICE._serialized_start=5055
  _QUERYSERVICE._serialized_end=5613
# @@protoc_insertion_point(module_scope)
