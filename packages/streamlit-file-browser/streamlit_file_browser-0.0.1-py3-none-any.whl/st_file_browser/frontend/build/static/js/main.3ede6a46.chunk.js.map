{"version":3,"sources":["StFileBrowser.tsx","index.tsx"],"names":["FileBrowserWrapper","props","args","folderOpenHandler","opts","ajustHeight","folderCloseHandler","fileSelectedHandler","file","files","find","relative_path","key","Streamlit","setComponentValue","convertFiles","map","modified","time","update_time","Date","size","noop","render","canFilter","detailRenderer","icons","Icons","FontAwesome","onFolderOpen","onFolderClose","onSelectFile","revoke_step","root","document","getElementById","height","Math","min","clientHeight","scrollHeight","offsetHeight","setFrameHeight","setTimeout","this","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","StFileBrowser"],"mappings":"mOAkCMA,G,cAAkB,kDAGtB,WAAYC,GAAwB,IAAD,EAEX,OAFW,qBACjC,cAAMA,IAHAC,UAAI,IAwBZC,kBAAoB,SAACC,GAAuB,OAAK,EAAKC,eAAa,EACnEC,mBAAqB,SAACF,GAAuB,OAAK,EAAKC,eAAa,EAEpEE,oBAAsB,SAACH,GACrB,IAAMI,EAAO,EAAKN,KAAKO,MAAMC,MAAK,SAAAF,GAAI,OAAIA,EAAKG,gBAAkBP,EAAKQ,OACtEC,IAAUC,kBAAkBN,IAC7B,EAEDO,aAAe,SAACN,GAAa,OAC3BA,EAAMO,KAAI,SAAAR,GAAI,MACZ,CACEI,IAAKJ,EAAKG,cACVM,UAvCaC,EAuCSV,EAAKW,aAvCK,IAAIC,KAASF,GAwC7CG,KAAMb,EAAKa,MAxCC,IAACH,MA2ClB,EAEDI,KAAO,kBAAM,sCAAK,EACXC,OAAS,WACd,OACE,6BACE,kBAAC,IAAW,iBACN,EAAKrB,KAAI,CACbsB,WAAW,EACXC,eAAgB,EAAKH,KACrBI,MAAOC,QAAMC,YAAY,GACzBnB,MAAO,EAAKM,aAAa,EAAKb,KAAKO,OACnCoB,aAAc,EAAK1B,kBACnB2B,cAAe,EAAKxB,mBACpByB,aAAc,EAAKxB,yBAlDzB,EAAKL,KAAOD,EAAMC,KAAI,EAkBvB,OAjBA,wCAED,SAAY8B,GACV,IAAMC,EAAOC,SAASC,eAAe,QACrC,GAAIF,EAAM,CACR,IAAMG,EAASC,KAAKC,IAAIL,EAAKM,aAAcN,EAAKO,aAAcP,EAAKQ,cACnE5B,IAAU6B,eAAeN,GAAUJ,GAA4B,IAC/DW,WAAW9B,IAAU6B,eAAgB,MAExC,+BAED,WACEE,KAAKvC,gBACN,gCAED,WACEuC,KAAKvC,kBACN,EAvBqB,CAASwC,MA8DlBC,cAAwB9C,GC5FvC+C,IAASxB,OACP,kBAAC,IAAMyB,WAAU,KACf,kBAACC,EAAa,OAEhBf,SAASC,eAAe,U","file":"static/js/main.3ede6a46.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport FileBrowser, { Icons, FileBrowserFile, FileBrowserFolder } from 'react-keyed-file-browser'\nimport 'react-keyed-file-browser/dist/react-keyed-file-browser.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\ninterface File {\n  name: string;\n  absolute_path: string;\n  relative_path: string;\n  is_dir: string;\n  size: number;\n  create_time: number;\n  update_time: number;\n  access_time: number;\n  children: File[];\n}\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\ninterface IArgs {\n  files: File[]\n}\n\nconst getTimeDiff = (time: number) => (+new Date() - time);\n\nclass FileBrowserWrapper extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    const root = document.getElementById('root');\n    if (root) {\n      const height = Math.min(root.clientHeight, root.scrollHeight, root.offsetHeight);\n      Streamlit.setFrameHeight(height - (revoke_step ? revoke_step : 0));\n      setTimeout(Streamlit.setFrameHeight, 1);\n    }\n  }\n\n  componentDidMount() {\n    this.ajustHeight();\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight();\n  }\n\n  folderOpenHandler = (opts: FileBrowserFolder) => this.ajustHeight();\n  folderCloseHandler = (opts: FileBrowserFolder) => this.ajustHeight();\n\n  fileSelectedHandler = (opts: FileBrowserFile) => {\n    const file = this.args.files.find(file => file.relative_path === opts.key)\n    Streamlit.setComponentValue(file)\n  }\n\n  convertFiles = (files: File[]): FileBrowserFile[] => (\n    files.map(file => (\n      {\n        key: file.relative_path,\n        modified: getTimeDiff(file.update_time),\n        size: file.size,\n      }\n    ))\n  )\n\n  noop = () => <></>\n  public render = () => {\n    return (\n      <div>\n        <FileBrowser\n          {...this.args}\n          canFilter={false}\n          detailRenderer={this.noop}\n          icons={Icons.FontAwesome(4)}\n          files={this.convertFiles(this.args.files)}\n          onFolderOpen={this.folderOpenHandler}\n          onFolderClose={this.folderCloseHandler}\n          onSelectFile={this.fileSelectedHandler}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withStreamlitConnection(FileBrowserWrapper)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StFileBrowser from \"./StFileBrowser\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StFileBrowser />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}