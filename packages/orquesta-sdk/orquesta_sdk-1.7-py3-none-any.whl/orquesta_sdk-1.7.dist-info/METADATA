Metadata-Version: 2.1
Name: orquesta-sdk
Version: 1.7
Summary: No-code business rules and remote configurations
Author: Orquesta
Author-email: info@orquesta.dev
Requires-Python: >=3.7,<4.0.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: requests (>=2.28.2,<3.0.0)
Description-Content-Type: text/markdown

<p align="left">
  <a href="https://orquesta.dev" target="_blank">
    <img src="https://static.wixstatic.com/media/e063e5_4f60988535a643218a02ad84cf60b7cd~mv2.png/v1/fill/w_130,h_108,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/Logo%2001.png" alt="Orquesta"  height="84">
  </a>
</p>

# Orquesta Python SDK

**This library allows you to quickly and easily use the Orquesta API via Python.**

# Installation

## Prerequisites

- Python version 2.7 and 3.5+
- A free Orquesta account from [orquesta.dev](https://orquesta.dev).

### Install package

```bash
pip install orquestadev
```

## Dependencies

- [requests](https://github.com/psf/requests)

## Usage

#### Query a rule with context

```python

import os
import orquestadev

client = orquestadev.OrquestaClient(os.environ.get('ORQUESTA_API_KEY'))
result = client.query('<your_rule_key>', '<your_default_value>', {'<your_field_key>': '<your_value>'})

## Example

result = client.query(
            "kill_switch", false, {"environments": "production", "isAdmin": True}
        )
```

#### Query a rule without context

```python

import os
import orquestadev

client = orquestadev.OrquestaClient(os.environ.get('ORQUESTA_API_KEY'))
client.query('<your_rule_key>', '<your_default_value>')

## Example

result = client.query("kill_switch", false)
```

